{
  "header_types" : [
    {
      "name" : "scalars_0",
      "id" : 0,
      "fields" : [
        ["tmp", 32, false],
        ["tmp_0", 16, false],
        ["tmp_1", 32, false],
        ["tmp_2", 16, false],
        ["tmp_3", 32, false],
        ["tmp_4", 16, false],
        ["tmp_5", 32, false],
        ["tmp_6", 16, false],
        ["tmp_7", 32, false],
        ["tmp_8", 16, false],
        ["tmp_9", 32, false],
        ["tmp_10", 16, false],
        ["tmp_11", 32, false],
        ["tmp_12", 16, false],
        ["tmp_13", 32, false],
        ["tmp_14", 16, false],
        ["tmp_15", 32, false],
        ["tmp_16", 16, false],
        ["tmp_17", 32, false],
        ["tmp_18", 32, false],
        ["tmp_19", 32, false],
        ["tmp_20", 32, false],
        ["tmp_21", 32, false],
        ["tmp_22", 32, false],
        ["tmp_23", 32, false],
        ["tmp_24", 32, false],
        ["tmp_25", 32, false],
        ["tmp_26", 32, false],
        ["tmp_27", 32, false],
        ["tmp_28", 32, false],
        ["tmp_29", 32, false],
        ["tmp_30", 32, false],
        ["tmp_31", 32, false],
        ["tmp_32", 32, false],
        ["tmp_33", 32, false],
        ["tmp_34", 32, false],
        ["tmp_35", 32, false],
        ["tmp_36", 16, false],
        ["userMetadata.maxi_length", 32, false],
        ["userMetadata.vl_weight", 16, false],
        ["userMetadata.curr_usage", 16, false],
        ["userMetadata.below_usage", 16, false]
      ]
    },
    {
      "name" : "standard_metadata",
      "id" : 1,
      "fields" : [
        ["ingress_port", 9, false],
        ["egress_spec", 9, false],
        ["egress_port", 9, false],
        ["instance_type", 32, false],
        ["packet_length", 32, false],
        ["enq_timestamp", 32, false],
        ["enq_qdepth", 19, false],
        ["deq_timedelta", 32, false],
        ["deq_qdepth", 19, false],
        ["qid", 5, false],
        ["ingress_global_timestamp", 48, false],
        ["egress_global_timestamp", 48, false],
        ["mcast_grp", 16, false],
        ["egress_rid", 16, false],
        ["checksum_error", 1, false],
        ["parser_error", 32, false],
        ["priority", 3, false],
        ["_padding", 6, false]
      ]
    },
    {
      "name" : "afdx_t",
      "id" : 2,
      "fields" : [
        ["dstConst", 32, false],
        ["dstVL", 16, false],
        ["srcMac_cst", 24, false],
        ["srcMac_addr", 24, false],
        ["etherType", 16, false]
      ]
    }
  ],
  "headers" : [
    {
      "name" : "scalars",
      "id" : 0,
      "header_type" : "scalars_0",
      "metadata" : true,
      "pi_omit" : true
    },
    {
      "name" : "standard_metadata",
      "id" : 1,
      "header_type" : "standard_metadata",
      "metadata" : true,
      "pi_omit" : true
    },
    {
      "name" : "afdx",
      "id" : 2,
      "header_type" : "afdx_t",
      "metadata" : false,
      "pi_omit" : true
    }
  ],
  "header_stacks" : [],
  "header_union_types" : [],
  "header_unions" : [],
  "header_union_stacks" : [],
  "field_lists" : [],
  "errors" : [
    ["NoError", 0],
    ["PacketTooShort", 1],
    ["NoMatch", 2],
    ["StackOutOfBounds", 3],
    ["HeaderTooShort", 4],
    ["ParserTimeout", 5],
    ["ParserInvalidArgument", 6]
  ],
  "enums" : [],
  "parsers" : [
    {
      "name" : "parser",
      "id" : 0,
      "init_state" : "start",
      "parse_states" : [
        {
          "name" : "start",
          "id" : 0,
          "parser_ops" : [
            {
              "parameters" : [
                {
                  "type" : "regular",
                  "value" : "afdx"
                }
              ],
              "op" : "extract"
            }
          ],
          "transitions" : [
            {
              "type" : "default",
              "value" : null,
              "mask" : null,
              "next_state" : null
            }
          ],
          "transition_key" : []
        }
      ]
    }
  ],
  "parse_vsets" : [],
  "deparsers" : [
    {
      "name" : "deparser",
      "id" : 0,
      "source_info" : {
        "filename" : "/home/p4/multiqueueing_afdx_roundRobin/afdx_sp_rr.p4",
        "line" : 173,
        "column" : 8,
        "source_fragment" : "MyDeparser"
      },
      "order" : ["afdx"],
      "primitives" : []
    }
  ],
  "meter_arrays" : [],
  "counter_arrays" : [],
  "register_arrays" : [
    {
      "name" : "usage",
      "id" : 0,
      "source_info" : {
        "filename" : "/home/p4/multiqueueing_afdx_roundRobin/afdx_sp_rr.p4",
        "line" : 38,
        "column" : 25,
        "source_fragment" : "usage"
      },
      "size" : 64,
      "bitwidth" : 16
    }
  ],
  "calculations" : [],
  "learn_lists" : [],
  "actions" : [
    {
      "name" : "NoAction",
      "id" : 0,
      "runtime_data" : [],
      "primitives" : []
    },
    {
      "name" : "MyIngress.Drop",
      "id" : 1,
      "runtime_data" : [],
      "primitives" : [
        {
          "op" : "mark_to_drop",
          "parameters" : [
            {
              "type" : "header",
              "value" : "standard_metadata"
            }
          ],
          "source_info" : {
            "filename" : "/home/p4/multiqueueing_afdx_roundRobin/afdx_sp_rr.p4",
            "line" : 57,
            "column" : 8,
            "source_fragment" : "mark_to_drop(standard_metadata)"
          }
        }
      ]
    },
    {
      "name" : "MyIngress.Check_VL",
      "id" : 2,
      "runtime_data" : [
        {
          "name" : "MaxLength",
          "bitwidth" : 32
        },
        {
          "name" : "MCastGrp",
          "bitwidth" : 16
        },
        {
          "name" : "VLWeight",
          "bitwidth" : 16
        }
      ],
      "primitives" : [
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "userMetadata.maxi_length"]
            },
            {
              "type" : "runtime_data",
              "value" : 0
            }
          ],
          "source_info" : {
            "filename" : "/home/p4/multiqueueing_afdx_roundRobin/afdx_sp_rr.p4",
            "line" : 63,
            "column" : 8,
            "source_fragment" : "meta.maxi_length = MaxLength"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["standard_metadata", "mcast_grp"]
            },
            {
              "type" : "runtime_data",
              "value" : 1
            }
          ],
          "source_info" : {
            "filename" : "/home/p4/multiqueueing_afdx_roundRobin/afdx_sp_rr.p4",
            "line" : 64,
            "column" : 8,
            "source_fragment" : "standard_metadata.mcast_grp = MCastGrp"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "userMetadata.vl_weight"]
            },
            {
              "type" : "runtime_data",
              "value" : 2
            }
          ],
          "source_info" : {
            "filename" : "/home/p4/multiqueueing_afdx_roundRobin/afdx_sp_rr.p4",
            "line" : 65,
            "column" : 8,
            "source_fragment" : "meta.vl_weight = VLWeight"
          }
        }
      ]
    },
    {
      "name" : "CASCADE_IF_ELSE11",
      "id" : 3,
      "runtime_data" : [],
      "primitives" : [
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "&",
                  "left" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "&",
                      "left" : {
                        "type" : "expression",
                        "value" : {
                          "op" : "+",
                          "left" : {
                            "type" : "hexstr",
                            "value" : "0x0007"
                          },
                          "right" : {
                            "type" : "expression",
                            "value" : {
                              "op" : "&",
                              "left" : {
                                "type" : "expression",
                                "value" : {
                                  "op" : "<<",
                                  "left" : {
                                    "type" : "field",
                                    "value" : ["afdx", "dstVL"]
                                  },
                                  "right" : {
                                    "type" : "hexstr",
                                    "value" : "0x3"
                                  }
                                }
                              },
                              "right" : {
                                "type" : "hexstr",
                                "value" : "0xffff"
                              }
                            }
                          }
                        }
                      },
                      "right" : {
                        "type" : "hexstr",
                        "value" : "0xffff"
                      }
                    }
                  },
                  "right" : {
                    "type" : "hexstr",
                    "value" : "0xffffffff"
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "/home/p4/multiqueueing_afdx_roundRobin/CASCADE_IF_ELSE.p4",
            "line" : 11,
            "column" : 114,
            "source_fragment" : "(bit<32>)(7 + 8*hdr.afdx.dstVL)"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_0"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "&",
                  "left" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "+",
                      "left" : {
                        "type" : "field",
                        "value" : ["scalars", "userMetadata.curr_usage"]
                      },
                      "right" : {
                        "type" : "hexstr",
                        "value" : "0x0001"
                      }
                    }
                  },
                  "right" : {
                    "type" : "hexstr",
                    "value" : "0xffff"
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "/home/p4/multiqueueing_afdx_roundRobin/CASCADE_IF_ELSE.p4",
            "line" : 11,
            "column" : 147,
            "source_fragment" : "meta.curr_usage+1"
          }
        },
        {
          "op" : "register_write",
          "parameters" : [
            {
              "type" : "register_array",
              "value" : "usage"
            },
            {
              "type" : "field",
              "value" : ["scalars", "tmp"]
            },
            {
              "type" : "field",
              "value" : ["scalars", "tmp_0"]
            }
          ],
          "source_info" : {
            "filename" : "/home/p4/multiqueueing_afdx_roundRobin/CASCADE_IF_ELSE.p4",
            "line" : 11,
            "column" : 102,
            "source_fragment" : "usage.write((bit<32>)(7 + 8*hdr.afdx.dstVL), meta.curr_usage+1)"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["standard_metadata", "priority"]
            },
            {
              "type" : "hexstr",
              "value" : "0x07"
            }
          ],
          "source_info" : {
            "filename" : "/home/p4/multiqueueing_afdx_roundRobin/CASCADE_IF_ELSE.p4",
            "line" : 11,
            "column" : 167,
            "source_fragment" : "standard_metadata.priority = 7"
          }
        }
      ]
    },
    {
      "name" : "CASCADE_IF_ELSE14",
      "id" : 4,
      "runtime_data" : [],
      "primitives" : [
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_1"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "&",
                  "left" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "&",
                      "left" : {
                        "type" : "expression",
                        "value" : {
                          "op" : "+",
                          "left" : {
                            "type" : "hexstr",
                            "value" : "0x0006"
                          },
                          "right" : {
                            "type" : "expression",
                            "value" : {
                              "op" : "&",
                              "left" : {
                                "type" : "expression",
                                "value" : {
                                  "op" : "<<",
                                  "left" : {
                                    "type" : "field",
                                    "value" : ["afdx", "dstVL"]
                                  },
                                  "right" : {
                                    "type" : "hexstr",
                                    "value" : "0x3"
                                  }
                                }
                              },
                              "right" : {
                                "type" : "hexstr",
                                "value" : "0xffff"
                              }
                            }
                          }
                        }
                      },
                      "right" : {
                        "type" : "hexstr",
                        "value" : "0xffff"
                      }
                    }
                  },
                  "right" : {
                    "type" : "hexstr",
                    "value" : "0xffffffff"
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "/home/p4/multiqueueing_afdx_roundRobin/CASCADE_IF_ELSE.p4",
            "line" : 14,
            "column" : 118,
            "source_fragment" : "(bit<32>)(6 + 8*hdr.afdx.dstVL)"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_2"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "&",
                  "left" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "+",
                      "left" : {
                        "type" : "field",
                        "value" : ["scalars", "userMetadata.curr_usage"]
                      },
                      "right" : {
                        "type" : "hexstr",
                        "value" : "0x0001"
                      }
                    }
                  },
                  "right" : {
                    "type" : "hexstr",
                    "value" : "0xffff"
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "/home/p4/multiqueueing_afdx_roundRobin/CASCADE_IF_ELSE.p4",
            "line" : 14,
            "column" : 151,
            "source_fragment" : "meta.curr_usage+1"
          }
        },
        {
          "op" : "register_write",
          "parameters" : [
            {
              "type" : "register_array",
              "value" : "usage"
            },
            {
              "type" : "field",
              "value" : ["scalars", "tmp_1"]
            },
            {
              "type" : "field",
              "value" : ["scalars", "tmp_2"]
            }
          ],
          "source_info" : {
            "filename" : "/home/p4/multiqueueing_afdx_roundRobin/CASCADE_IF_ELSE.p4",
            "line" : 14,
            "column" : 106,
            "source_fragment" : "usage.write((bit<32>)(6 + 8*hdr.afdx.dstVL), meta.curr_usage+1)"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["standard_metadata", "priority"]
            },
            {
              "type" : "hexstr",
              "value" : "0x06"
            }
          ],
          "source_info" : {
            "filename" : "/home/p4/multiqueueing_afdx_roundRobin/CASCADE_IF_ELSE.p4",
            "line" : 14,
            "column" : 171,
            "source_fragment" : "standard_metadata.priority = 6"
          }
        }
      ]
    },
    {
      "name" : "CASCADE_IF_ELSE17",
      "id" : 5,
      "runtime_data" : [],
      "primitives" : [
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_3"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "&",
                  "left" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "&",
                      "left" : {
                        "type" : "expression",
                        "value" : {
                          "op" : "+",
                          "left" : {
                            "type" : "hexstr",
                            "value" : "0x0005"
                          },
                          "right" : {
                            "type" : "expression",
                            "value" : {
                              "op" : "&",
                              "left" : {
                                "type" : "expression",
                                "value" : {
                                  "op" : "<<",
                                  "left" : {
                                    "type" : "field",
                                    "value" : ["afdx", "dstVL"]
                                  },
                                  "right" : {
                                    "type" : "hexstr",
                                    "value" : "0x3"
                                  }
                                }
                              },
                              "right" : {
                                "type" : "hexstr",
                                "value" : "0xffff"
                              }
                            }
                          }
                        }
                      },
                      "right" : {
                        "type" : "hexstr",
                        "value" : "0xffff"
                      }
                    }
                  },
                  "right" : {
                    "type" : "hexstr",
                    "value" : "0xffffffff"
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "/home/p4/multiqueueing_afdx_roundRobin/CASCADE_IF_ELSE.p4",
            "line" : 17,
            "column" : 122,
            "source_fragment" : "(bit<32>)(5 + 8*hdr.afdx.dstVL)"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_4"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "&",
                  "left" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "+",
                      "left" : {
                        "type" : "field",
                        "value" : ["scalars", "userMetadata.curr_usage"]
                      },
                      "right" : {
                        "type" : "hexstr",
                        "value" : "0x0001"
                      }
                    }
                  },
                  "right" : {
                    "type" : "hexstr",
                    "value" : "0xffff"
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "/home/p4/multiqueueing_afdx_roundRobin/CASCADE_IF_ELSE.p4",
            "line" : 17,
            "column" : 155,
            "source_fragment" : "meta.curr_usage+1"
          }
        },
        {
          "op" : "register_write",
          "parameters" : [
            {
              "type" : "register_array",
              "value" : "usage"
            },
            {
              "type" : "field",
              "value" : ["scalars", "tmp_3"]
            },
            {
              "type" : "field",
              "value" : ["scalars", "tmp_4"]
            }
          ],
          "source_info" : {
            "filename" : "/home/p4/multiqueueing_afdx_roundRobin/CASCADE_IF_ELSE.p4",
            "line" : 17,
            "column" : 110,
            "source_fragment" : "usage.write((bit<32>)(5 + 8*hdr.afdx.dstVL), meta.curr_usage+1)"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["standard_metadata", "priority"]
            },
            {
              "type" : "hexstr",
              "value" : "0x05"
            }
          ],
          "source_info" : {
            "filename" : "/home/p4/multiqueueing_afdx_roundRobin/CASCADE_IF_ELSE.p4",
            "line" : 17,
            "column" : 175,
            "source_fragment" : "standard_metadata.priority = 5"
          }
        }
      ]
    },
    {
      "name" : "CASCADE_IF_ELSE20",
      "id" : 6,
      "runtime_data" : [],
      "primitives" : [
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_5"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "&",
                  "left" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "&",
                      "left" : {
                        "type" : "expression",
                        "value" : {
                          "op" : "+",
                          "left" : {
                            "type" : "hexstr",
                            "value" : "0x0004"
                          },
                          "right" : {
                            "type" : "expression",
                            "value" : {
                              "op" : "&",
                              "left" : {
                                "type" : "expression",
                                "value" : {
                                  "op" : "<<",
                                  "left" : {
                                    "type" : "field",
                                    "value" : ["afdx", "dstVL"]
                                  },
                                  "right" : {
                                    "type" : "hexstr",
                                    "value" : "0x3"
                                  }
                                }
                              },
                              "right" : {
                                "type" : "hexstr",
                                "value" : "0xffff"
                              }
                            }
                          }
                        }
                      },
                      "right" : {
                        "type" : "hexstr",
                        "value" : "0xffff"
                      }
                    }
                  },
                  "right" : {
                    "type" : "hexstr",
                    "value" : "0xffffffff"
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "/home/p4/multiqueueing_afdx_roundRobin/CASCADE_IF_ELSE.p4",
            "line" : 20,
            "column" : 126,
            "source_fragment" : "(bit<32>)(4 + 8*hdr.afdx.dstVL)"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_6"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "&",
                  "left" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "+",
                      "left" : {
                        "type" : "field",
                        "value" : ["scalars", "userMetadata.curr_usage"]
                      },
                      "right" : {
                        "type" : "hexstr",
                        "value" : "0x0001"
                      }
                    }
                  },
                  "right" : {
                    "type" : "hexstr",
                    "value" : "0xffff"
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "/home/p4/multiqueueing_afdx_roundRobin/CASCADE_IF_ELSE.p4",
            "line" : 20,
            "column" : 159,
            "source_fragment" : "meta.curr_usage+1"
          }
        },
        {
          "op" : "register_write",
          "parameters" : [
            {
              "type" : "register_array",
              "value" : "usage"
            },
            {
              "type" : "field",
              "value" : ["scalars", "tmp_5"]
            },
            {
              "type" : "field",
              "value" : ["scalars", "tmp_6"]
            }
          ],
          "source_info" : {
            "filename" : "/home/p4/multiqueueing_afdx_roundRobin/CASCADE_IF_ELSE.p4",
            "line" : 20,
            "column" : 114,
            "source_fragment" : "usage.write((bit<32>)(4 + 8*hdr.afdx.dstVL), meta.curr_usage+1)"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["standard_metadata", "priority"]
            },
            {
              "type" : "hexstr",
              "value" : "0x04"
            }
          ],
          "source_info" : {
            "filename" : "/home/p4/multiqueueing_afdx_roundRobin/CASCADE_IF_ELSE.p4",
            "line" : 20,
            "column" : 179,
            "source_fragment" : "standard_metadata.priority = 4"
          }
        }
      ]
    },
    {
      "name" : "CASCADE_IF_ELSE23",
      "id" : 7,
      "runtime_data" : [],
      "primitives" : [
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_7"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "&",
                  "left" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "&",
                      "left" : {
                        "type" : "expression",
                        "value" : {
                          "op" : "+",
                          "left" : {
                            "type" : "hexstr",
                            "value" : "0x0003"
                          },
                          "right" : {
                            "type" : "expression",
                            "value" : {
                              "op" : "&",
                              "left" : {
                                "type" : "expression",
                                "value" : {
                                  "op" : "<<",
                                  "left" : {
                                    "type" : "field",
                                    "value" : ["afdx", "dstVL"]
                                  },
                                  "right" : {
                                    "type" : "hexstr",
                                    "value" : "0x3"
                                  }
                                }
                              },
                              "right" : {
                                "type" : "hexstr",
                                "value" : "0xffff"
                              }
                            }
                          }
                        }
                      },
                      "right" : {
                        "type" : "hexstr",
                        "value" : "0xffff"
                      }
                    }
                  },
                  "right" : {
                    "type" : "hexstr",
                    "value" : "0xffffffff"
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "/home/p4/multiqueueing_afdx_roundRobin/CASCADE_IF_ELSE.p4",
            "line" : 23,
            "column" : 130,
            "source_fragment" : "(bit<32>)(3 + 8*hdr.afdx.dstVL)"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_8"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "&",
                  "left" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "+",
                      "left" : {
                        "type" : "field",
                        "value" : ["scalars", "userMetadata.curr_usage"]
                      },
                      "right" : {
                        "type" : "hexstr",
                        "value" : "0x0001"
                      }
                    }
                  },
                  "right" : {
                    "type" : "hexstr",
                    "value" : "0xffff"
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "/home/p4/multiqueueing_afdx_roundRobin/CASCADE_IF_ELSE.p4",
            "line" : 23,
            "column" : 163,
            "source_fragment" : "meta.curr_usage+1"
          }
        },
        {
          "op" : "register_write",
          "parameters" : [
            {
              "type" : "register_array",
              "value" : "usage"
            },
            {
              "type" : "field",
              "value" : ["scalars", "tmp_7"]
            },
            {
              "type" : "field",
              "value" : ["scalars", "tmp_8"]
            }
          ],
          "source_info" : {
            "filename" : "/home/p4/multiqueueing_afdx_roundRobin/CASCADE_IF_ELSE.p4",
            "line" : 23,
            "column" : 118,
            "source_fragment" : "usage.write((bit<32>)(3 + 8*hdr.afdx.dstVL), meta.curr_usage+1)"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["standard_metadata", "priority"]
            },
            {
              "type" : "hexstr",
              "value" : "0x03"
            }
          ],
          "source_info" : {
            "filename" : "/home/p4/multiqueueing_afdx_roundRobin/CASCADE_IF_ELSE.p4",
            "line" : 23,
            "column" : 183,
            "source_fragment" : "standard_metadata.priority = 3"
          }
        }
      ]
    },
    {
      "name" : "CASCADE_IF_ELSE26",
      "id" : 8,
      "runtime_data" : [],
      "primitives" : [
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_9"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "&",
                  "left" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "&",
                      "left" : {
                        "type" : "expression",
                        "value" : {
                          "op" : "+",
                          "left" : {
                            "type" : "hexstr",
                            "value" : "0x0002"
                          },
                          "right" : {
                            "type" : "expression",
                            "value" : {
                              "op" : "&",
                              "left" : {
                                "type" : "expression",
                                "value" : {
                                  "op" : "<<",
                                  "left" : {
                                    "type" : "field",
                                    "value" : ["afdx", "dstVL"]
                                  },
                                  "right" : {
                                    "type" : "hexstr",
                                    "value" : "0x3"
                                  }
                                }
                              },
                              "right" : {
                                "type" : "hexstr",
                                "value" : "0xffff"
                              }
                            }
                          }
                        }
                      },
                      "right" : {
                        "type" : "hexstr",
                        "value" : "0xffff"
                      }
                    }
                  },
                  "right" : {
                    "type" : "hexstr",
                    "value" : "0xffffffff"
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "/home/p4/multiqueueing_afdx_roundRobin/CASCADE_IF_ELSE.p4",
            "line" : 26,
            "column" : 134,
            "source_fragment" : "(bit<32>)(2 + 8*hdr.afdx.dstVL)"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_10"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "&",
                  "left" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "+",
                      "left" : {
                        "type" : "field",
                        "value" : ["scalars", "userMetadata.curr_usage"]
                      },
                      "right" : {
                        "type" : "hexstr",
                        "value" : "0x0001"
                      }
                    }
                  },
                  "right" : {
                    "type" : "hexstr",
                    "value" : "0xffff"
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "/home/p4/multiqueueing_afdx_roundRobin/CASCADE_IF_ELSE.p4",
            "line" : 26,
            "column" : 167,
            "source_fragment" : "meta.curr_usage+1"
          }
        },
        {
          "op" : "register_write",
          "parameters" : [
            {
              "type" : "register_array",
              "value" : "usage"
            },
            {
              "type" : "field",
              "value" : ["scalars", "tmp_9"]
            },
            {
              "type" : "field",
              "value" : ["scalars", "tmp_10"]
            }
          ],
          "source_info" : {
            "filename" : "/home/p4/multiqueueing_afdx_roundRobin/CASCADE_IF_ELSE.p4",
            "line" : 26,
            "column" : 122,
            "source_fragment" : "usage.write((bit<32>)(2 + 8*hdr.afdx.dstVL), meta.curr_usage+1)"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["standard_metadata", "priority"]
            },
            {
              "type" : "hexstr",
              "value" : "0x02"
            }
          ],
          "source_info" : {
            "filename" : "/home/p4/multiqueueing_afdx_roundRobin/CASCADE_IF_ELSE.p4",
            "line" : 26,
            "column" : 187,
            "source_fragment" : "standard_metadata.priority = 2"
          }
        }
      ]
    },
    {
      "name" : "CASCADE_IF_ELSE29",
      "id" : 9,
      "runtime_data" : [],
      "primitives" : [
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_11"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "&",
                  "left" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "&",
                      "left" : {
                        "type" : "expression",
                        "value" : {
                          "op" : "+",
                          "left" : {
                            "type" : "hexstr",
                            "value" : "0x0001"
                          },
                          "right" : {
                            "type" : "expression",
                            "value" : {
                              "op" : "&",
                              "left" : {
                                "type" : "expression",
                                "value" : {
                                  "op" : "<<",
                                  "left" : {
                                    "type" : "field",
                                    "value" : ["afdx", "dstVL"]
                                  },
                                  "right" : {
                                    "type" : "hexstr",
                                    "value" : "0x3"
                                  }
                                }
                              },
                              "right" : {
                                "type" : "hexstr",
                                "value" : "0xffff"
                              }
                            }
                          }
                        }
                      },
                      "right" : {
                        "type" : "hexstr",
                        "value" : "0xffff"
                      }
                    }
                  },
                  "right" : {
                    "type" : "hexstr",
                    "value" : "0xffffffff"
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "/home/p4/multiqueueing_afdx_roundRobin/CASCADE_IF_ELSE.p4",
            "line" : 29,
            "column" : 138,
            "source_fragment" : "(bit<32>)(1 + 8*hdr.afdx.dstVL)"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_12"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "&",
                  "left" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "+",
                      "left" : {
                        "type" : "field",
                        "value" : ["scalars", "userMetadata.curr_usage"]
                      },
                      "right" : {
                        "type" : "hexstr",
                        "value" : "0x0001"
                      }
                    }
                  },
                  "right" : {
                    "type" : "hexstr",
                    "value" : "0xffff"
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "/home/p4/multiqueueing_afdx_roundRobin/CASCADE_IF_ELSE.p4",
            "line" : 29,
            "column" : 171,
            "source_fragment" : "meta.curr_usage+1"
          }
        },
        {
          "op" : "register_write",
          "parameters" : [
            {
              "type" : "register_array",
              "value" : "usage"
            },
            {
              "type" : "field",
              "value" : ["scalars", "tmp_11"]
            },
            {
              "type" : "field",
              "value" : ["scalars", "tmp_12"]
            }
          ],
          "source_info" : {
            "filename" : "/home/p4/multiqueueing_afdx_roundRobin/CASCADE_IF_ELSE.p4",
            "line" : 29,
            "column" : 126,
            "source_fragment" : "usage.write((bit<32>)(1 + 8*hdr.afdx.dstVL), meta.curr_usage+1)"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["standard_metadata", "priority"]
            },
            {
              "type" : "hexstr",
              "value" : "0x01"
            }
          ],
          "source_info" : {
            "filename" : "/home/p4/multiqueueing_afdx_roundRobin/CASCADE_IF_ELSE.p4",
            "line" : 29,
            "column" : 191,
            "source_fragment" : "standard_metadata.priority = 1"
          }
        }
      ]
    },
    {
      "name" : "CASCADE_IF_ELSE32",
      "id" : 10,
      "runtime_data" : [],
      "primitives" : [
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_13"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "&",
                  "left" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "&",
                      "left" : {
                        "type" : "expression",
                        "value" : {
                          "op" : "<<",
                          "left" : {
                            "type" : "field",
                            "value" : ["afdx", "dstVL"]
                          },
                          "right" : {
                            "type" : "hexstr",
                            "value" : "0x3"
                          }
                        }
                      },
                      "right" : {
                        "type" : "hexstr",
                        "value" : "0xffff"
                      }
                    }
                  },
                  "right" : {
                    "type" : "hexstr",
                    "value" : "0xffffffff"
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "/home/p4/multiqueueing_afdx_roundRobin/CASCADE_IF_ELSE.p4",
            "line" : 32,
            "column" : 142,
            "source_fragment" : "(bit<32>)(0 + 8*hdr.afdx.dstVL)"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_14"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "&",
                  "left" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "+",
                      "left" : {
                        "type" : "field",
                        "value" : ["scalars", "userMetadata.curr_usage"]
                      },
                      "right" : {
                        "type" : "hexstr",
                        "value" : "0x0001"
                      }
                    }
                  },
                  "right" : {
                    "type" : "hexstr",
                    "value" : "0xffff"
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "/home/p4/multiqueueing_afdx_roundRobin/CASCADE_IF_ELSE.p4",
            "line" : 32,
            "column" : 175,
            "source_fragment" : "meta.curr_usage+1"
          }
        },
        {
          "op" : "register_write",
          "parameters" : [
            {
              "type" : "register_array",
              "value" : "usage"
            },
            {
              "type" : "field",
              "value" : ["scalars", "tmp_13"]
            },
            {
              "type" : "field",
              "value" : ["scalars", "tmp_14"]
            }
          ],
          "source_info" : {
            "filename" : "/home/p4/multiqueueing_afdx_roundRobin/CASCADE_IF_ELSE.p4",
            "line" : 32,
            "column" : 130,
            "source_fragment" : "usage.write((bit<32>)(0 + 8*hdr.afdx.dstVL), meta.curr_usage+1)"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["standard_metadata", "priority"]
            },
            {
              "type" : "hexstr",
              "value" : "0x00"
            }
          ],
          "source_info" : {
            "filename" : "/home/p4/multiqueueing_afdx_roundRobin/CASCADE_IF_ELSE.p4",
            "line" : 32,
            "column" : 195,
            "source_fragment" : "standard_metadata.priority = 0"
          }
        }
      ]
    },
    {
      "name" : "CASCADE_IF_ELSE33",
      "id" : 11,
      "runtime_data" : [],
      "primitives" : [
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_15"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "&",
                  "left" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "&",
                      "left" : {
                        "type" : "expression",
                        "value" : {
                          "op" : "<<",
                          "left" : {
                            "type" : "field",
                            "value" : ["afdx", "dstVL"]
                          },
                          "right" : {
                            "type" : "hexstr",
                            "value" : "0x3"
                          }
                        }
                      },
                      "right" : {
                        "type" : "hexstr",
                        "value" : "0xffff"
                      }
                    }
                  },
                  "right" : {
                    "type" : "hexstr",
                    "value" : "0xffffffff"
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "/home/p4/multiqueueing_afdx_roundRobin/CASCADE_IF_ELSE.p4",
            "line" : 33,
            "column" : 44,
            "source_fragment" : "(bit<32>)(0 + 8*hdr.afdx.dstVL)"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_16"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "&",
                  "left" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "+",
                      "left" : {
                        "type" : "field",
                        "value" : ["scalars", "userMetadata.curr_usage"]
                      },
                      "right" : {
                        "type" : "hexstr",
                        "value" : "0x0001"
                      }
                    }
                  },
                  "right" : {
                    "type" : "hexstr",
                    "value" : "0xffff"
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "/home/p4/multiqueueing_afdx_roundRobin/CASCADE_IF_ELSE.p4",
            "line" : 33,
            "column" : 77,
            "source_fragment" : "meta.curr_usage+1"
          }
        },
        {
          "op" : "register_write",
          "parameters" : [
            {
              "type" : "register_array",
              "value" : "usage"
            },
            {
              "type" : "field",
              "value" : ["scalars", "tmp_15"]
            },
            {
              "type" : "field",
              "value" : ["scalars", "tmp_16"]
            }
          ],
          "source_info" : {
            "filename" : "/home/p4/multiqueueing_afdx_roundRobin/CASCADE_IF_ELSE.p4",
            "line" : 33,
            "column" : 32,
            "source_fragment" : "usage.write((bit<32>)(0 + 8*hdr.afdx.dstVL), meta.curr_usage+1)"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["standard_metadata", "priority"]
            },
            {
              "type" : "hexstr",
              "value" : "0x00"
            }
          ],
          "source_info" : {
            "filename" : "/home/p4/multiqueueing_afdx_roundRobin/CASCADE_IF_ELSE.p4",
            "line" : 33,
            "column" : 97,
            "source_fragment" : "standard_metadata.priority = 0"
          }
        }
      ]
    },
    {
      "name" : "CASCADE_IF_ELSE32_0",
      "id" : 12,
      "runtime_data" : [],
      "primitives" : [
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_17"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "&",
                  "left" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "&",
                      "left" : {
                        "type" : "expression",
                        "value" : {
                          "op" : "<<",
                          "left" : {
                            "type" : "field",
                            "value" : ["afdx", "dstVL"]
                          },
                          "right" : {
                            "type" : "hexstr",
                            "value" : "0x3"
                          }
                        }
                      },
                      "right" : {
                        "type" : "hexstr",
                        "value" : "0xffff"
                      }
                    }
                  },
                  "right" : {
                    "type" : "hexstr",
                    "value" : "0xffffffff"
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "/home/p4/multiqueueing_afdx_roundRobin/CASCADE_IF_ELSE.p4",
            "line" : 32,
            "column" : 56,
            "source_fragment" : "(bit<32>)(0 + 8*hdr.afdx.dstVL)"
          }
        },
        {
          "op" : "register_read",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "userMetadata.curr_usage"]
            },
            {
              "type" : "register_array",
              "value" : "usage"
            },
            {
              "type" : "field",
              "value" : ["scalars", "tmp_17"]
            }
          ],
          "source_info" : {
            "filename" : "/home/p4/multiqueueing_afdx_roundRobin/CASCADE_IF_ELSE.p4",
            "line" : 32,
            "column" : 28,
            "source_fragment" : "usage.read(meta.curr_usage, (bit<32>)(0 + 8*hdr.afdx.dstVL))"
          }
        }
      ]
    },
    {
      "name" : "CASCADE_IF_ELSE29_0",
      "id" : 13,
      "runtime_data" : [],
      "primitives" : [
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_18"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "&",
                  "left" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "&",
                      "left" : {
                        "type" : "expression",
                        "value" : {
                          "op" : "+",
                          "left" : {
                            "type" : "hexstr",
                            "value" : "0x0001"
                          },
                          "right" : {
                            "type" : "expression",
                            "value" : {
                              "op" : "&",
                              "left" : {
                                "type" : "expression",
                                "value" : {
                                  "op" : "<<",
                                  "left" : {
                                    "type" : "field",
                                    "value" : ["afdx", "dstVL"]
                                  },
                                  "right" : {
                                    "type" : "hexstr",
                                    "value" : "0x3"
                                  }
                                }
                              },
                              "right" : {
                                "type" : "hexstr",
                                "value" : "0xffff"
                              }
                            }
                          }
                        }
                      },
                      "right" : {
                        "type" : "hexstr",
                        "value" : "0xffff"
                      }
                    }
                  },
                  "right" : {
                    "type" : "hexstr",
                    "value" : "0xffffffff"
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "/home/p4/multiqueueing_afdx_roundRobin/CASCADE_IF_ELSE.p4",
            "line" : 29,
            "column" : 52,
            "source_fragment" : "(bit<32>)(1 + 8*hdr.afdx.dstVL)"
          }
        },
        {
          "op" : "register_read",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "userMetadata.curr_usage"]
            },
            {
              "type" : "register_array",
              "value" : "usage"
            },
            {
              "type" : "field",
              "value" : ["scalars", "tmp_18"]
            }
          ],
          "source_info" : {
            "filename" : "/home/p4/multiqueueing_afdx_roundRobin/CASCADE_IF_ELSE.p4",
            "line" : 29,
            "column" : 24,
            "source_fragment" : "usage.read(meta.curr_usage, (bit<32>)(1 + 8*hdr.afdx.dstVL))"
          }
        }
      ]
    },
    {
      "name" : "CASCADE_IF_ELSE26_0",
      "id" : 14,
      "runtime_data" : [],
      "primitives" : [
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_19"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "&",
                  "left" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "&",
                      "left" : {
                        "type" : "expression",
                        "value" : {
                          "op" : "+",
                          "left" : {
                            "type" : "hexstr",
                            "value" : "0x0002"
                          },
                          "right" : {
                            "type" : "expression",
                            "value" : {
                              "op" : "&",
                              "left" : {
                                "type" : "expression",
                                "value" : {
                                  "op" : "<<",
                                  "left" : {
                                    "type" : "field",
                                    "value" : ["afdx", "dstVL"]
                                  },
                                  "right" : {
                                    "type" : "hexstr",
                                    "value" : "0x3"
                                  }
                                }
                              },
                              "right" : {
                                "type" : "hexstr",
                                "value" : "0xffff"
                              }
                            }
                          }
                        }
                      },
                      "right" : {
                        "type" : "hexstr",
                        "value" : "0xffff"
                      }
                    }
                  },
                  "right" : {
                    "type" : "hexstr",
                    "value" : "0xffffffff"
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "/home/p4/multiqueueing_afdx_roundRobin/CASCADE_IF_ELSE.p4",
            "line" : 26,
            "column" : 48,
            "source_fragment" : "(bit<32>)(2 + 8*hdr.afdx.dstVL)"
          }
        },
        {
          "op" : "register_read",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "userMetadata.curr_usage"]
            },
            {
              "type" : "register_array",
              "value" : "usage"
            },
            {
              "type" : "field",
              "value" : ["scalars", "tmp_19"]
            }
          ],
          "source_info" : {
            "filename" : "/home/p4/multiqueueing_afdx_roundRobin/CASCADE_IF_ELSE.p4",
            "line" : 26,
            "column" : 20,
            "source_fragment" : "usage.read(meta.curr_usage, (bit<32>)(2 + 8*hdr.afdx.dstVL))"
          }
        }
      ]
    },
    {
      "name" : "CASCADE_IF_ELSE23_0",
      "id" : 15,
      "runtime_data" : [],
      "primitives" : [
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_20"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "&",
                  "left" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "&",
                      "left" : {
                        "type" : "expression",
                        "value" : {
                          "op" : "+",
                          "left" : {
                            "type" : "hexstr",
                            "value" : "0x0003"
                          },
                          "right" : {
                            "type" : "expression",
                            "value" : {
                              "op" : "&",
                              "left" : {
                                "type" : "expression",
                                "value" : {
                                  "op" : "<<",
                                  "left" : {
                                    "type" : "field",
                                    "value" : ["afdx", "dstVL"]
                                  },
                                  "right" : {
                                    "type" : "hexstr",
                                    "value" : "0x3"
                                  }
                                }
                              },
                              "right" : {
                                "type" : "hexstr",
                                "value" : "0xffff"
                              }
                            }
                          }
                        }
                      },
                      "right" : {
                        "type" : "hexstr",
                        "value" : "0xffff"
                      }
                    }
                  },
                  "right" : {
                    "type" : "hexstr",
                    "value" : "0xffffffff"
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "/home/p4/multiqueueing_afdx_roundRobin/CASCADE_IF_ELSE.p4",
            "line" : 23,
            "column" : 44,
            "source_fragment" : "(bit<32>)(3 + 8*hdr.afdx.dstVL)"
          }
        },
        {
          "op" : "register_read",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "userMetadata.curr_usage"]
            },
            {
              "type" : "register_array",
              "value" : "usage"
            },
            {
              "type" : "field",
              "value" : ["scalars", "tmp_20"]
            }
          ],
          "source_info" : {
            "filename" : "/home/p4/multiqueueing_afdx_roundRobin/CASCADE_IF_ELSE.p4",
            "line" : 23,
            "column" : 16,
            "source_fragment" : "usage.read(meta.curr_usage, (bit<32>)(3 + 8*hdr.afdx.dstVL))"
          }
        }
      ]
    },
    {
      "name" : "CASCADE_IF_ELSE20_0",
      "id" : 16,
      "runtime_data" : [],
      "primitives" : [
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_21"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "&",
                  "left" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "&",
                      "left" : {
                        "type" : "expression",
                        "value" : {
                          "op" : "+",
                          "left" : {
                            "type" : "hexstr",
                            "value" : "0x0004"
                          },
                          "right" : {
                            "type" : "expression",
                            "value" : {
                              "op" : "&",
                              "left" : {
                                "type" : "expression",
                                "value" : {
                                  "op" : "<<",
                                  "left" : {
                                    "type" : "field",
                                    "value" : ["afdx", "dstVL"]
                                  },
                                  "right" : {
                                    "type" : "hexstr",
                                    "value" : "0x3"
                                  }
                                }
                              },
                              "right" : {
                                "type" : "hexstr",
                                "value" : "0xffff"
                              }
                            }
                          }
                        }
                      },
                      "right" : {
                        "type" : "hexstr",
                        "value" : "0xffff"
                      }
                    }
                  },
                  "right" : {
                    "type" : "hexstr",
                    "value" : "0xffffffff"
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "/home/p4/multiqueueing_afdx_roundRobin/CASCADE_IF_ELSE.p4",
            "line" : 20,
            "column" : 40,
            "source_fragment" : "(bit<32>)(4 + 8*hdr.afdx.dstVL)"
          }
        },
        {
          "op" : "register_read",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "userMetadata.curr_usage"]
            },
            {
              "type" : "register_array",
              "value" : "usage"
            },
            {
              "type" : "field",
              "value" : ["scalars", "tmp_21"]
            }
          ],
          "source_info" : {
            "filename" : "/home/p4/multiqueueing_afdx_roundRobin/CASCADE_IF_ELSE.p4",
            "line" : 20,
            "column" : 12,
            "source_fragment" : "usage.read(meta.curr_usage, (bit<32>)(4 + 8*hdr.afdx.dstVL))"
          }
        }
      ]
    },
    {
      "name" : "CASCADE_IF_ELSE17_0",
      "id" : 17,
      "runtime_data" : [],
      "primitives" : [
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_22"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "&",
                  "left" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "&",
                      "left" : {
                        "type" : "expression",
                        "value" : {
                          "op" : "+",
                          "left" : {
                            "type" : "hexstr",
                            "value" : "0x0005"
                          },
                          "right" : {
                            "type" : "expression",
                            "value" : {
                              "op" : "&",
                              "left" : {
                                "type" : "expression",
                                "value" : {
                                  "op" : "<<",
                                  "left" : {
                                    "type" : "field",
                                    "value" : ["afdx", "dstVL"]
                                  },
                                  "right" : {
                                    "type" : "hexstr",
                                    "value" : "0x3"
                                  }
                                }
                              },
                              "right" : {
                                "type" : "hexstr",
                                "value" : "0xffff"
                              }
                            }
                          }
                        }
                      },
                      "right" : {
                        "type" : "hexstr",
                        "value" : "0xffff"
                      }
                    }
                  },
                  "right" : {
                    "type" : "hexstr",
                    "value" : "0xffffffff"
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "/home/p4/multiqueueing_afdx_roundRobin/CASCADE_IF_ELSE.p4",
            "line" : 17,
            "column" : 36,
            "source_fragment" : "(bit<32>)(5 + 8*hdr.afdx.dstVL)"
          }
        },
        {
          "op" : "register_read",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "userMetadata.curr_usage"]
            },
            {
              "type" : "register_array",
              "value" : "usage"
            },
            {
              "type" : "field",
              "value" : ["scalars", "tmp_22"]
            }
          ],
          "source_info" : {
            "filename" : "/home/p4/multiqueueing_afdx_roundRobin/CASCADE_IF_ELSE.p4",
            "line" : 17,
            "column" : 8,
            "source_fragment" : "usage.read(meta.curr_usage, (bit<32>)(5 + 8*hdr.afdx.dstVL))"
          }
        }
      ]
    },
    {
      "name" : "CASCADE_IF_ELSE14_0",
      "id" : 18,
      "runtime_data" : [],
      "primitives" : [
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_23"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "&",
                  "left" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "&",
                      "left" : {
                        "type" : "expression",
                        "value" : {
                          "op" : "+",
                          "left" : {
                            "type" : "hexstr",
                            "value" : "0x0006"
                          },
                          "right" : {
                            "type" : "expression",
                            "value" : {
                              "op" : "&",
                              "left" : {
                                "type" : "expression",
                                "value" : {
                                  "op" : "<<",
                                  "left" : {
                                    "type" : "field",
                                    "value" : ["afdx", "dstVL"]
                                  },
                                  "right" : {
                                    "type" : "hexstr",
                                    "value" : "0x3"
                                  }
                                }
                              },
                              "right" : {
                                "type" : "hexstr",
                                "value" : "0xffff"
                              }
                            }
                          }
                        }
                      },
                      "right" : {
                        "type" : "hexstr",
                        "value" : "0xffff"
                      }
                    }
                  },
                  "right" : {
                    "type" : "hexstr",
                    "value" : "0xffffffff"
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "/home/p4/multiqueueing_afdx_roundRobin/CASCADE_IF_ELSE.p4",
            "line" : 14,
            "column" : 32,
            "source_fragment" : "(bit<32>)(6 + 8*hdr.afdx.dstVL)"
          }
        },
        {
          "op" : "register_read",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "userMetadata.curr_usage"]
            },
            {
              "type" : "register_array",
              "value" : "usage"
            },
            {
              "type" : "field",
              "value" : ["scalars", "tmp_23"]
            }
          ],
          "source_info" : {
            "filename" : "/home/p4/multiqueueing_afdx_roundRobin/CASCADE_IF_ELSE.p4",
            "line" : 14,
            "column" : 4,
            "source_fragment" : "usage.read(meta.curr_usage, (bit<32>)(6 + 8*hdr.afdx.dstVL))"
          }
        }
      ]
    },
    {
      "name" : "CASCADE_IF_ELSE11_0",
      "id" : 19,
      "runtime_data" : [],
      "primitives" : [
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_24"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "&",
                  "left" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "&",
                      "left" : {
                        "type" : "expression",
                        "value" : {
                          "op" : "+",
                          "left" : {
                            "type" : "hexstr",
                            "value" : "0x0007"
                          },
                          "right" : {
                            "type" : "expression",
                            "value" : {
                              "op" : "&",
                              "left" : {
                                "type" : "expression",
                                "value" : {
                                  "op" : "<<",
                                  "left" : {
                                    "type" : "field",
                                    "value" : ["afdx", "dstVL"]
                                  },
                                  "right" : {
                                    "type" : "hexstr",
                                    "value" : "0x3"
                                  }
                                }
                              },
                              "right" : {
                                "type" : "hexstr",
                                "value" : "0xffff"
                              }
                            }
                          }
                        }
                      },
                      "right" : {
                        "type" : "hexstr",
                        "value" : "0xffff"
                      }
                    }
                  },
                  "right" : {
                    "type" : "hexstr",
                    "value" : "0xffffffff"
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "/home/p4/multiqueueing_afdx_roundRobin/CASCADE_IF_ELSE.p4",
            "line" : 11,
            "column" : 28,
            "source_fragment" : "(bit<32>)(7 + 8*hdr.afdx.dstVL)"
          }
        },
        {
          "op" : "register_read",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "userMetadata.curr_usage"]
            },
            {
              "type" : "register_array",
              "value" : "usage"
            },
            {
              "type" : "field",
              "value" : ["scalars", "tmp_24"]
            }
          ],
          "source_info" : {
            "filename" : "/home/p4/multiqueueing_afdx_roundRobin/CASCADE_IF_ELSE.p4",
            "line" : 11,
            "column" : 0,
            "source_fragment" : "usage.read(meta.curr_usage, (bit<32>)(7 + 8*hdr.afdx.dstVL))"
          }
        }
      ]
    },
    {
      "name" : "afdx_sp_rr107",
      "id" : 20,
      "runtime_data" : [],
      "primitives" : [
        {
          "op" : "mark_to_drop",
          "parameters" : [
            {
              "type" : "header",
              "value" : "standard_metadata"
            }
          ],
          "source_info" : {
            "filename" : "/home/p4/multiqueueing_afdx_roundRobin/afdx_sp_rr.p4",
            "line" : 107,
            "column" : 13,
            "source_fragment" : "mark_to_drop(standard_metadata)"
          }
        }
      ]
    },
    {
      "name" : "afdx_sp_rr138",
      "id" : 21,
      "runtime_data" : [],
      "primitives" : [
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "userMetadata.below_usage"]
            },
            {
              "type" : "hexstr",
              "value" : "0x0000"
            }
          ],
          "source_info" : {
            "filename" : "/home/p4/multiqueueing_afdx_roundRobin/afdx_sp_rr.p4",
            "line" : 138,
            "column" : 16,
            "source_fragment" : "meta.below_usage = 0"
          }
        }
      ]
    },
    {
      "name" : "afdx_sp_rr143",
      "id" : 22,
      "runtime_data" : [],
      "primitives" : [
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_25"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "&",
                  "left" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "+",
                      "left" : {
                        "type" : "expression",
                        "value" : {
                          "op" : "&",
                          "left" : {
                            "type" : "expression",
                            "value" : {
                              "op" : "+",
                              "left" : {
                                "type" : "expression",
                                "value" : {
                                  "op" : "&",
                                  "left" : {
                                    "type" : "field",
                                    "value" : ["standard_metadata", "priority"]
                                  },
                                  "right" : {
                                    "type" : "hexstr",
                                    "value" : "0xffffffff"
                                  }
                                }
                              },
                              "right" : {
                                "type" : "hexstr",
                                "value" : "0xffffffff"
                              }
                            }
                          },
                          "right" : {
                            "type" : "hexstr",
                            "value" : "0xffffffff"
                          }
                        }
                      },
                      "right" : {
                        "type" : "expression",
                        "value" : {
                          "op" : "&",
                          "left" : {
                            "type" : "expression",
                            "value" : {
                              "op" : "&",
                              "left" : {
                                "type" : "expression",
                                "value" : {
                                  "op" : "<<",
                                  "left" : {
                                    "type" : "field",
                                    "value" : ["afdx", "dstVL"]
                                  },
                                  "right" : {
                                    "type" : "hexstr",
                                    "value" : "0x3"
                                  }
                                }
                              },
                              "right" : {
                                "type" : "hexstr",
                                "value" : "0xffff"
                              }
                            }
                          },
                          "right" : {
                            "type" : "hexstr",
                            "value" : "0xffffffff"
                          }
                        }
                      }
                    }
                  },
                  "right" : {
                    "type" : "hexstr",
                    "value" : "0xffffffff"
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "/home/p4/multiqueueing_afdx_roundRobin/afdx_sp_rr.p4",
            "line" : 143,
            "column" : 45,
            "source_fragment" : "(bit<32>)(standard_metadata.priority)-1 + (bit<32>)(8*hdr.afdx.dstVL)"
          }
        },
        {
          "op" : "register_read",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "userMetadata.below_usage"]
            },
            {
              "type" : "register_array",
              "value" : "usage"
            },
            {
              "type" : "field",
              "value" : ["scalars", "tmp_25"]
            }
          ],
          "source_info" : {
            "filename" : "/home/p4/multiqueueing_afdx_roundRobin/afdx_sp_rr.p4",
            "line" : 143,
            "column" : 16,
            "source_fragment" : "usage.read(meta.below_usage, (bit<32>)(standard_metadata.priority)-1 + (bit<32>)(8*hdr.afdx.dstVL))"
          }
        }
      ]
    },
    {
      "name" : "afdx_sp_rr132",
      "id" : 23,
      "runtime_data" : [],
      "primitives" : [
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_26"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "&",
                  "left" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "+",
                      "left" : {
                        "type" : "expression",
                        "value" : {
                          "op" : "&",
                          "left" : {
                            "type" : "field",
                            "value" : ["standard_metadata", "priority"]
                          },
                          "right" : {
                            "type" : "hexstr",
                            "value" : "0xffffffff"
                          }
                        }
                      },
                      "right" : {
                        "type" : "expression",
                        "value" : {
                          "op" : "&",
                          "left" : {
                            "type" : "expression",
                            "value" : {
                              "op" : "&",
                              "left" : {
                                "type" : "expression",
                                "value" : {
                                  "op" : "<<",
                                  "left" : {
                                    "type" : "field",
                                    "value" : ["afdx", "dstVL"]
                                  },
                                  "right" : {
                                    "type" : "hexstr",
                                    "value" : "0x3"
                                  }
                                }
                              },
                              "right" : {
                                "type" : "hexstr",
                                "value" : "0xffff"
                              }
                            }
                          },
                          "right" : {
                            "type" : "hexstr",
                            "value" : "0xffffffff"
                          }
                        }
                      }
                    }
                  },
                  "right" : {
                    "type" : "hexstr",
                    "value" : "0xffffffff"
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "/home/p4/multiqueueing_afdx_roundRobin/afdx_sp_rr.p4",
            "line" : 132,
            "column" : 40,
            "source_fragment" : "(bit<32>)(standard_metadata.priority) + (bit<32>)(8*hdr.afdx.dstVL)"
          }
        },
        {
          "op" : "register_read",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "userMetadata.curr_usage"]
            },
            {
              "type" : "register_array",
              "value" : "usage"
            },
            {
              "type" : "field",
              "value" : ["scalars", "tmp_26"]
            }
          ],
          "source_info" : {
            "filename" : "/home/p4/multiqueueing_afdx_roundRobin/afdx_sp_rr.p4",
            "line" : 132,
            "column" : 12,
            "source_fragment" : "usage.read(meta.curr_usage, (bit<32>)(standard_metadata.priority) + (bit<32>)(8*hdr.afdx.dstVL))"
          }
        }
      ]
    },
    {
      "name" : "afdx_sp_rr153",
      "id" : 24,
      "runtime_data" : [],
      "primitives" : [
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_27"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "&",
                  "left" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "&",
                      "left" : {
                        "type" : "expression",
                        "value" : {
                          "op" : "<<",
                          "left" : {
                            "type" : "field",
                            "value" : ["afdx", "dstVL"]
                          },
                          "right" : {
                            "type" : "hexstr",
                            "value" : "0x3"
                          }
                        }
                      },
                      "right" : {
                        "type" : "hexstr",
                        "value" : "0xffff"
                      }
                    }
                  },
                  "right" : {
                    "type" : "hexstr",
                    "value" : "0xffffffff"
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "/home/p4/multiqueueing_afdx_roundRobin/afdx_sp_rr.p4",
            "line" : 153,
            "column" : 32,
            "source_fragment" : "(bit<32>)(0 + 8*hdr.afdx.dstVL)"
          }
        },
        {
          "op" : "register_write",
          "parameters" : [
            {
              "type" : "register_array",
              "value" : "usage"
            },
            {
              "type" : "field",
              "value" : ["scalars", "tmp_27"]
            },
            {
              "type" : "hexstr",
              "value" : "0x0000"
            }
          ],
          "source_info" : {
            "filename" : "/home/p4/multiqueueing_afdx_roundRobin/afdx_sp_rr.p4",
            "line" : 153,
            "column" : 20,
            "source_fragment" : "usage.write((bit<32>)(0 + 8*hdr.afdx.dstVL), 0)"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_28"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "&",
                  "left" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "&",
                      "left" : {
                        "type" : "expression",
                        "value" : {
                          "op" : "+",
                          "left" : {
                            "type" : "hexstr",
                            "value" : "0x0001"
                          },
                          "right" : {
                            "type" : "expression",
                            "value" : {
                              "op" : "&",
                              "left" : {
                                "type" : "expression",
                                "value" : {
                                  "op" : "<<",
                                  "left" : {
                                    "type" : "field",
                                    "value" : ["afdx", "dstVL"]
                                  },
                                  "right" : {
                                    "type" : "hexstr",
                                    "value" : "0x3"
                                  }
                                }
                              },
                              "right" : {
                                "type" : "hexstr",
                                "value" : "0xffff"
                              }
                            }
                          }
                        }
                      },
                      "right" : {
                        "type" : "hexstr",
                        "value" : "0xffff"
                      }
                    }
                  },
                  "right" : {
                    "type" : "hexstr",
                    "value" : "0xffffffff"
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "/home/p4/multiqueueing_afdx_roundRobin/afdx_sp_rr.p4",
            "line" : 154,
            "column" : 32,
            "source_fragment" : "(bit<32>)(1 + 8*hdr.afdx.dstVL)"
          }
        },
        {
          "op" : "register_write",
          "parameters" : [
            {
              "type" : "register_array",
              "value" : "usage"
            },
            {
              "type" : "field",
              "value" : ["scalars", "tmp_28"]
            },
            {
              "type" : "hexstr",
              "value" : "0x0000"
            }
          ],
          "source_info" : {
            "filename" : "/home/p4/multiqueueing_afdx_roundRobin/afdx_sp_rr.p4",
            "line" : 154,
            "column" : 20,
            "source_fragment" : "usage.write((bit<32>)(1 + 8*hdr.afdx.dstVL), 0)"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_29"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "&",
                  "left" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "&",
                      "left" : {
                        "type" : "expression",
                        "value" : {
                          "op" : "+",
                          "left" : {
                            "type" : "hexstr",
                            "value" : "0x0002"
                          },
                          "right" : {
                            "type" : "expression",
                            "value" : {
                              "op" : "&",
                              "left" : {
                                "type" : "expression",
                                "value" : {
                                  "op" : "<<",
                                  "left" : {
                                    "type" : "field",
                                    "value" : ["afdx", "dstVL"]
                                  },
                                  "right" : {
                                    "type" : "hexstr",
                                    "value" : "0x3"
                                  }
                                }
                              },
                              "right" : {
                                "type" : "hexstr",
                                "value" : "0xffff"
                              }
                            }
                          }
                        }
                      },
                      "right" : {
                        "type" : "hexstr",
                        "value" : "0xffff"
                      }
                    }
                  },
                  "right" : {
                    "type" : "hexstr",
                    "value" : "0xffffffff"
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "/home/p4/multiqueueing_afdx_roundRobin/afdx_sp_rr.p4",
            "line" : 155,
            "column" : 32,
            "source_fragment" : "(bit<32>)(2 + 8*hdr.afdx.dstVL)"
          }
        },
        {
          "op" : "register_write",
          "parameters" : [
            {
              "type" : "register_array",
              "value" : "usage"
            },
            {
              "type" : "field",
              "value" : ["scalars", "tmp_29"]
            },
            {
              "type" : "hexstr",
              "value" : "0x0000"
            }
          ],
          "source_info" : {
            "filename" : "/home/p4/multiqueueing_afdx_roundRobin/afdx_sp_rr.p4",
            "line" : 155,
            "column" : 20,
            "source_fragment" : "usage.write((bit<32>)(2 + 8*hdr.afdx.dstVL), 0)"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_30"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "&",
                  "left" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "&",
                      "left" : {
                        "type" : "expression",
                        "value" : {
                          "op" : "+",
                          "left" : {
                            "type" : "hexstr",
                            "value" : "0x0003"
                          },
                          "right" : {
                            "type" : "expression",
                            "value" : {
                              "op" : "&",
                              "left" : {
                                "type" : "expression",
                                "value" : {
                                  "op" : "<<",
                                  "left" : {
                                    "type" : "field",
                                    "value" : ["afdx", "dstVL"]
                                  },
                                  "right" : {
                                    "type" : "hexstr",
                                    "value" : "0x3"
                                  }
                                }
                              },
                              "right" : {
                                "type" : "hexstr",
                                "value" : "0xffff"
                              }
                            }
                          }
                        }
                      },
                      "right" : {
                        "type" : "hexstr",
                        "value" : "0xffff"
                      }
                    }
                  },
                  "right" : {
                    "type" : "hexstr",
                    "value" : "0xffffffff"
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "/home/p4/multiqueueing_afdx_roundRobin/afdx_sp_rr.p4",
            "line" : 156,
            "column" : 32,
            "source_fragment" : "(bit<32>)(3 + 8*hdr.afdx.dstVL)"
          }
        },
        {
          "op" : "register_write",
          "parameters" : [
            {
              "type" : "register_array",
              "value" : "usage"
            },
            {
              "type" : "field",
              "value" : ["scalars", "tmp_30"]
            },
            {
              "type" : "hexstr",
              "value" : "0x0000"
            }
          ],
          "source_info" : {
            "filename" : "/home/p4/multiqueueing_afdx_roundRobin/afdx_sp_rr.p4",
            "line" : 156,
            "column" : 20,
            "source_fragment" : "usage.write((bit<32>)(3 + 8*hdr.afdx.dstVL), 0)"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_31"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "&",
                  "left" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "&",
                      "left" : {
                        "type" : "expression",
                        "value" : {
                          "op" : "+",
                          "left" : {
                            "type" : "hexstr",
                            "value" : "0x0004"
                          },
                          "right" : {
                            "type" : "expression",
                            "value" : {
                              "op" : "&",
                              "left" : {
                                "type" : "expression",
                                "value" : {
                                  "op" : "<<",
                                  "left" : {
                                    "type" : "field",
                                    "value" : ["afdx", "dstVL"]
                                  },
                                  "right" : {
                                    "type" : "hexstr",
                                    "value" : "0x3"
                                  }
                                }
                              },
                              "right" : {
                                "type" : "hexstr",
                                "value" : "0xffff"
                              }
                            }
                          }
                        }
                      },
                      "right" : {
                        "type" : "hexstr",
                        "value" : "0xffff"
                      }
                    }
                  },
                  "right" : {
                    "type" : "hexstr",
                    "value" : "0xffffffff"
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "/home/p4/multiqueueing_afdx_roundRobin/afdx_sp_rr.p4",
            "line" : 157,
            "column" : 32,
            "source_fragment" : "(bit<32>)(4 + 8*hdr.afdx.dstVL)"
          }
        },
        {
          "op" : "register_write",
          "parameters" : [
            {
              "type" : "register_array",
              "value" : "usage"
            },
            {
              "type" : "field",
              "value" : ["scalars", "tmp_31"]
            },
            {
              "type" : "hexstr",
              "value" : "0x0000"
            }
          ],
          "source_info" : {
            "filename" : "/home/p4/multiqueueing_afdx_roundRobin/afdx_sp_rr.p4",
            "line" : 157,
            "column" : 20,
            "source_fragment" : "usage.write((bit<32>)(4 + 8*hdr.afdx.dstVL), 0)"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_32"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "&",
                  "left" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "&",
                      "left" : {
                        "type" : "expression",
                        "value" : {
                          "op" : "+",
                          "left" : {
                            "type" : "hexstr",
                            "value" : "0x0005"
                          },
                          "right" : {
                            "type" : "expression",
                            "value" : {
                              "op" : "&",
                              "left" : {
                                "type" : "expression",
                                "value" : {
                                  "op" : "<<",
                                  "left" : {
                                    "type" : "field",
                                    "value" : ["afdx", "dstVL"]
                                  },
                                  "right" : {
                                    "type" : "hexstr",
                                    "value" : "0x3"
                                  }
                                }
                              },
                              "right" : {
                                "type" : "hexstr",
                                "value" : "0xffff"
                              }
                            }
                          }
                        }
                      },
                      "right" : {
                        "type" : "hexstr",
                        "value" : "0xffff"
                      }
                    }
                  },
                  "right" : {
                    "type" : "hexstr",
                    "value" : "0xffffffff"
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "/home/p4/multiqueueing_afdx_roundRobin/afdx_sp_rr.p4",
            "line" : 158,
            "column" : 32,
            "source_fragment" : "(bit<32>)(5 + 8*hdr.afdx.dstVL)"
          }
        },
        {
          "op" : "register_write",
          "parameters" : [
            {
              "type" : "register_array",
              "value" : "usage"
            },
            {
              "type" : "field",
              "value" : ["scalars", "tmp_32"]
            },
            {
              "type" : "hexstr",
              "value" : "0x0000"
            }
          ],
          "source_info" : {
            "filename" : "/home/p4/multiqueueing_afdx_roundRobin/afdx_sp_rr.p4",
            "line" : 158,
            "column" : 20,
            "source_fragment" : "usage.write((bit<32>)(5 + 8*hdr.afdx.dstVL), 0)"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_33"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "&",
                  "left" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "&",
                      "left" : {
                        "type" : "expression",
                        "value" : {
                          "op" : "+",
                          "left" : {
                            "type" : "hexstr",
                            "value" : "0x0006"
                          },
                          "right" : {
                            "type" : "expression",
                            "value" : {
                              "op" : "&",
                              "left" : {
                                "type" : "expression",
                                "value" : {
                                  "op" : "<<",
                                  "left" : {
                                    "type" : "field",
                                    "value" : ["afdx", "dstVL"]
                                  },
                                  "right" : {
                                    "type" : "hexstr",
                                    "value" : "0x3"
                                  }
                                }
                              },
                              "right" : {
                                "type" : "hexstr",
                                "value" : "0xffff"
                              }
                            }
                          }
                        }
                      },
                      "right" : {
                        "type" : "hexstr",
                        "value" : "0xffff"
                      }
                    }
                  },
                  "right" : {
                    "type" : "hexstr",
                    "value" : "0xffffffff"
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "/home/p4/multiqueueing_afdx_roundRobin/afdx_sp_rr.p4",
            "line" : 159,
            "column" : 32,
            "source_fragment" : "(bit<32>)(6 + 8*hdr.afdx.dstVL)"
          }
        },
        {
          "op" : "register_write",
          "parameters" : [
            {
              "type" : "register_array",
              "value" : "usage"
            },
            {
              "type" : "field",
              "value" : ["scalars", "tmp_33"]
            },
            {
              "type" : "hexstr",
              "value" : "0x0000"
            }
          ],
          "source_info" : {
            "filename" : "/home/p4/multiqueueing_afdx_roundRobin/afdx_sp_rr.p4",
            "line" : 159,
            "column" : 20,
            "source_fragment" : "usage.write((bit<32>)(6 + 8*hdr.afdx.dstVL), 0)"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_34"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "&",
                  "left" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "&",
                      "left" : {
                        "type" : "expression",
                        "value" : {
                          "op" : "+",
                          "left" : {
                            "type" : "hexstr",
                            "value" : "0x0007"
                          },
                          "right" : {
                            "type" : "expression",
                            "value" : {
                              "op" : "&",
                              "left" : {
                                "type" : "expression",
                                "value" : {
                                  "op" : "<<",
                                  "left" : {
                                    "type" : "field",
                                    "value" : ["afdx", "dstVL"]
                                  },
                                  "right" : {
                                    "type" : "hexstr",
                                    "value" : "0x3"
                                  }
                                }
                              },
                              "right" : {
                                "type" : "hexstr",
                                "value" : "0xffff"
                              }
                            }
                          }
                        }
                      },
                      "right" : {
                        "type" : "hexstr",
                        "value" : "0xffff"
                      }
                    }
                  },
                  "right" : {
                    "type" : "hexstr",
                    "value" : "0xffffffff"
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "/home/p4/multiqueueing_afdx_roundRobin/afdx_sp_rr.p4",
            "line" : 160,
            "column" : 32,
            "source_fragment" : "(bit<32>)(7 + 8*hdr.afdx.dstVL)"
          }
        },
        {
          "op" : "register_write",
          "parameters" : [
            {
              "type" : "register_array",
              "value" : "usage"
            },
            {
              "type" : "field",
              "value" : ["scalars", "tmp_34"]
            },
            {
              "type" : "hexstr",
              "value" : "0x0000"
            }
          ],
          "source_info" : {
            "filename" : "/home/p4/multiqueueing_afdx_roundRobin/afdx_sp_rr.p4",
            "line" : 160,
            "column" : 20,
            "source_fragment" : "usage.write((bit<32>)(7 + 8*hdr.afdx.dstVL), 0)"
          }
        }
      ]
    },
    {
      "name" : "afdx_sp_rr164",
      "id" : 25,
      "runtime_data" : [],
      "primitives" : [
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_35"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "&",
                  "left" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "+",
                      "left" : {
                        "type" : "expression",
                        "value" : {
                          "op" : "&",
                          "left" : {
                            "type" : "field",
                            "value" : ["standard_metadata", "priority"]
                          },
                          "right" : {
                            "type" : "hexstr",
                            "value" : "0xffffffff"
                          }
                        }
                      },
                      "right" : {
                        "type" : "expression",
                        "value" : {
                          "op" : "&",
                          "left" : {
                            "type" : "expression",
                            "value" : {
                              "op" : "&",
                              "left" : {
                                "type" : "expression",
                                "value" : {
                                  "op" : "<<",
                                  "left" : {
                                    "type" : "field",
                                    "value" : ["afdx", "dstVL"]
                                  },
                                  "right" : {
                                    "type" : "hexstr",
                                    "value" : "0x3"
                                  }
                                }
                              },
                              "right" : {
                                "type" : "hexstr",
                                "value" : "0xffff"
                              }
                            }
                          },
                          "right" : {
                            "type" : "hexstr",
                            "value" : "0xffffffff"
                          }
                        }
                      }
                    }
                  },
                  "right" : {
                    "type" : "hexstr",
                    "value" : "0xffffffff"
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "/home/p4/multiqueueing_afdx_roundRobin/afdx_sp_rr.p4",
            "line" : 164,
            "column" : 32,
            "source_fragment" : "(bit<32>)(standard_metadata.priority) + (bit<32>)(8*hdr.afdx.dstVL)"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_36"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "&",
                  "left" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "+",
                      "left" : {
                        "type" : "field",
                        "value" : ["scalars", "userMetadata.curr_usage"]
                      },
                      "right" : {
                        "type" : "hexstr",
                        "value" : "0xffff"
                      }
                    }
                  },
                  "right" : {
                    "type" : "hexstr",
                    "value" : "0xffff"
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "/home/p4/multiqueueing_afdx_roundRobin/afdx_sp_rr.p4",
            "line" : 164,
            "column" : 101,
            "source_fragment" : "meta.curr_usage-1"
          }
        },
        {
          "op" : "register_write",
          "parameters" : [
            {
              "type" : "register_array",
              "value" : "usage"
            },
            {
              "type" : "field",
              "value" : ["scalars", "tmp_35"]
            },
            {
              "type" : "field",
              "value" : ["scalars", "tmp_36"]
            }
          ],
          "source_info" : {
            "filename" : "/home/p4/multiqueueing_afdx_roundRobin/afdx_sp_rr.p4",
            "line" : 164,
            "column" : 20,
            "source_fragment" : "usage.write((bit<32>)(standard_metadata.priority) + (bit<32>)(8*hdr.afdx.dstVL), meta.curr_usage-1)"
          }
        }
      ]
    },
    {
      "name" : "afdx_sp_rr168",
      "id" : 26,
      "runtime_data" : [],
      "primitives" : [
        {
          "op" : "mark_to_drop",
          "parameters" : [
            {
              "type" : "header",
              "value" : "standard_metadata"
            }
          ],
          "source_info" : {
            "filename" : "/home/p4/multiqueueing_afdx_roundRobin/afdx_sp_rr.p4",
            "line" : 168,
            "column" : 13,
            "source_fragment" : "mark_to_drop(standard_metadata)"
          }
        }
      ]
    },
    {
      "name" : "afdx_sp_rr119",
      "id" : 27,
      "runtime_data" : [],
      "primitives" : [
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["afdx", "etherType"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "|",
                  "left" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "|",
                      "left" : {
                        "type" : "hexstr",
                        "value" : "0x0800"
                      },
                      "right" : {
                        "type" : "expression",
                        "value" : {
                          "op" : "&",
                          "left" : {
                            "type" : "expression",
                            "value" : {
                              "op" : "&",
                              "left" : {
                                "type" : "expression",
                                "value" : {
                                  "op" : "<<",
                                  "left" : {
                                    "type" : "field",
                                    "value" : ["standard_metadata", "qid"]
                                  },
                                  "right" : {
                                    "type" : "hexstr",
                                    "value" : "0x3"
                                  }
                                }
                              },
                              "right" : {
                                "type" : "hexstr",
                                "value" : "0x1f"
                              }
                            }
                          },
                          "right" : {
                            "type" : "hexstr",
                            "value" : "0xffff"
                          }
                        }
                      }
                    }
                  },
                  "right" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "&",
                      "left" : {
                        "type" : "field",
                        "value" : ["standard_metadata", "priority"]
                      },
                      "right" : {
                        "type" : "hexstr",
                        "value" : "0xffff"
                      }
                    }
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "/home/p4/multiqueueing_afdx_roundRobin/afdx_sp_rr.p4",
            "line" : 119,
            "column" : 4,
            "source_fragment" : "hdr.afdx.etherType = TYPE_IPV4 | (bit<16>) (standard_metadata.qid << 3 ) ..."
          }
        }
      ]
    }
  ],
  "pipelines" : [
    {
      "name" : "ingress",
      "id" : 0,
      "source_info" : {
        "filename" : "/home/p4/multiqueueing_afdx_roundRobin/afdx_sp_rr.p4",
        "line" : 54,
        "column" : 8,
        "source_fragment" : "MyIngress"
      },
      "init_table" : "node_2",
      "tables" : [
        {
          "name" : "MyIngress.afdx_table",
          "id" : 0,
          "source_info" : {
            "filename" : "/home/p4/multiqueueing_afdx_roundRobin/afdx_sp_rr.p4",
            "line" : 68,
            "column" : 10,
            "source_fragment" : "afdx_table"
          },
          "key" : [
            {
              "match_type" : "exact",
              "name" : "standard_metadata.ingress_port",
              "target" : ["standard_metadata", "ingress_port"],
              "mask" : null
            },
            {
              "match_type" : "exact",
              "name" : "hdr.afdx.dstVL",
              "target" : ["afdx", "dstVL"],
              "mask" : null
            }
          ],
          "match_type" : "exact",
          "type" : "simple",
          "max_size" : 1024,
          "with_counters" : false,
          "support_timeout" : false,
          "direct_meters" : null,
          "action_ids" : [2, 1, 0],
          "actions" : ["MyIngress.Check_VL", "MyIngress.Drop", "NoAction"],
          "base_default_next" : "tbl_CASCADE_IF_ELSE11",
          "next_tables" : {
            "MyIngress.Check_VL" : "tbl_CASCADE_IF_ELSE11",
            "MyIngress.Drop" : "tbl_CASCADE_IF_ELSE11",
            "NoAction" : "tbl_CASCADE_IF_ELSE11"
          },
          "default_entry" : {
            "action_id" : 1,
            "action_const" : false,
            "action_data" : [],
            "action_entry_const" : false
          }
        },
        {
          "name" : "tbl_CASCADE_IF_ELSE11",
          "id" : 1,
          "source_info" : {
            "filename" : "/home/p4/multiqueueing_afdx_roundRobin/CASCADE_IF_ELSE.p4",
            "line" : 11,
            "column" : 0,
            "source_fragment" : "usage.read(meta.curr_usage, (bit<32>)(7 + 8*hdr.afdx.dstVL))"
          },
          "key" : [],
          "match_type" : "exact",
          "type" : "simple",
          "max_size" : 1024,
          "with_counters" : false,
          "support_timeout" : false,
          "direct_meters" : null,
          "action_ids" : [19],
          "actions" : ["CASCADE_IF_ELSE11_0"],
          "base_default_next" : "node_5",
          "next_tables" : {
            "CASCADE_IF_ELSE11_0" : "node_5"
          },
          "default_entry" : {
            "action_id" : 19,
            "action_const" : true,
            "action_data" : [],
            "action_entry_const" : true
          }
        },
        {
          "name" : "tbl_CASCADE_IF_ELSE11_0",
          "id" : 2,
          "source_info" : {
            "filename" : "/home/p4/multiqueueing_afdx_roundRobin/CASCADE_IF_ELSE.p4",
            "line" : 11,
            "column" : 102,
            "source_fragment" : "usage.write((bit<32>)(7 + 8*hdr.afdx.dstVL), meta.curr_usage+1); standard_metadata.priority ="
          },
          "key" : [],
          "match_type" : "exact",
          "type" : "simple",
          "max_size" : 1024,
          "with_counters" : false,
          "support_timeout" : false,
          "direct_meters" : null,
          "action_ids" : [3],
          "actions" : ["CASCADE_IF_ELSE11"],
          "base_default_next" : null,
          "next_tables" : {
            "CASCADE_IF_ELSE11" : null
          },
          "default_entry" : {
            "action_id" : 3,
            "action_const" : true,
            "action_data" : [],
            "action_entry_const" : true
          }
        },
        {
          "name" : "tbl_CASCADE_IF_ELSE14",
          "id" : 3,
          "source_info" : {
            "filename" : "/home/p4/multiqueueing_afdx_roundRobin/CASCADE_IF_ELSE.p4",
            "line" : 14,
            "column" : 4,
            "source_fragment" : "usage.read(meta.curr_usage, (bit<32>)(6 + 8*hdr.afdx.dstVL))"
          },
          "key" : [],
          "match_type" : "exact",
          "type" : "simple",
          "max_size" : 1024,
          "with_counters" : false,
          "support_timeout" : false,
          "direct_meters" : null,
          "action_ids" : [18],
          "actions" : ["CASCADE_IF_ELSE14_0"],
          "base_default_next" : "node_8",
          "next_tables" : {
            "CASCADE_IF_ELSE14_0" : "node_8"
          },
          "default_entry" : {
            "action_id" : 18,
            "action_const" : true,
            "action_data" : [],
            "action_entry_const" : true
          }
        },
        {
          "name" : "tbl_CASCADE_IF_ELSE14_0",
          "id" : 4,
          "source_info" : {
            "filename" : "/home/p4/multiqueueing_afdx_roundRobin/CASCADE_IF_ELSE.p4",
            "line" : 14,
            "column" : 106,
            "source_fragment" : "usage.write((bit<32>)(6 + 8*hdr.afdx.dstVL), meta.curr_usage+1); standard_metadata.priority ="
          },
          "key" : [],
          "match_type" : "exact",
          "type" : "simple",
          "max_size" : 1024,
          "with_counters" : false,
          "support_timeout" : false,
          "direct_meters" : null,
          "action_ids" : [4],
          "actions" : ["CASCADE_IF_ELSE14"],
          "base_default_next" : null,
          "next_tables" : {
            "CASCADE_IF_ELSE14" : null
          },
          "default_entry" : {
            "action_id" : 4,
            "action_const" : true,
            "action_data" : [],
            "action_entry_const" : true
          }
        },
        {
          "name" : "tbl_CASCADE_IF_ELSE17",
          "id" : 5,
          "source_info" : {
            "filename" : "/home/p4/multiqueueing_afdx_roundRobin/CASCADE_IF_ELSE.p4",
            "line" : 17,
            "column" : 8,
            "source_fragment" : "usage.read(meta.curr_usage, (bit<32>)(5 + 8*hdr.afdx.dstVL))"
          },
          "key" : [],
          "match_type" : "exact",
          "type" : "simple",
          "max_size" : 1024,
          "with_counters" : false,
          "support_timeout" : false,
          "direct_meters" : null,
          "action_ids" : [17],
          "actions" : ["CASCADE_IF_ELSE17_0"],
          "base_default_next" : "node_11",
          "next_tables" : {
            "CASCADE_IF_ELSE17_0" : "node_11"
          },
          "default_entry" : {
            "action_id" : 17,
            "action_const" : true,
            "action_data" : [],
            "action_entry_const" : true
          }
        },
        {
          "name" : "tbl_CASCADE_IF_ELSE17_0",
          "id" : 6,
          "source_info" : {
            "filename" : "/home/p4/multiqueueing_afdx_roundRobin/CASCADE_IF_ELSE.p4",
            "line" : 17,
            "column" : 110,
            "source_fragment" : "usage.write((bit<32>)(5 + 8*hdr.afdx.dstVL), meta.curr_usage+1); standard_metadata.priority ="
          },
          "key" : [],
          "match_type" : "exact",
          "type" : "simple",
          "max_size" : 1024,
          "with_counters" : false,
          "support_timeout" : false,
          "direct_meters" : null,
          "action_ids" : [5],
          "actions" : ["CASCADE_IF_ELSE17"],
          "base_default_next" : null,
          "next_tables" : {
            "CASCADE_IF_ELSE17" : null
          },
          "default_entry" : {
            "action_id" : 5,
            "action_const" : true,
            "action_data" : [],
            "action_entry_const" : true
          }
        },
        {
          "name" : "tbl_CASCADE_IF_ELSE20",
          "id" : 7,
          "source_info" : {
            "filename" : "/home/p4/multiqueueing_afdx_roundRobin/CASCADE_IF_ELSE.p4",
            "line" : 20,
            "column" : 12,
            "source_fragment" : "usage.read(meta.curr_usage, (bit<32>)(4 + 8*hdr.afdx.dstVL))"
          },
          "key" : [],
          "match_type" : "exact",
          "type" : "simple",
          "max_size" : 1024,
          "with_counters" : false,
          "support_timeout" : false,
          "direct_meters" : null,
          "action_ids" : [16],
          "actions" : ["CASCADE_IF_ELSE20_0"],
          "base_default_next" : "node_14",
          "next_tables" : {
            "CASCADE_IF_ELSE20_0" : "node_14"
          },
          "default_entry" : {
            "action_id" : 16,
            "action_const" : true,
            "action_data" : [],
            "action_entry_const" : true
          }
        },
        {
          "name" : "tbl_CASCADE_IF_ELSE20_0",
          "id" : 8,
          "source_info" : {
            "filename" : "/home/p4/multiqueueing_afdx_roundRobin/CASCADE_IF_ELSE.p4",
            "line" : 20,
            "column" : 114,
            "source_fragment" : "usage.write((bit<32>)(4 + 8*hdr.afdx.dstVL), meta.curr_usage+1); standard_metadata.priority ="
          },
          "key" : [],
          "match_type" : "exact",
          "type" : "simple",
          "max_size" : 1024,
          "with_counters" : false,
          "support_timeout" : false,
          "direct_meters" : null,
          "action_ids" : [6],
          "actions" : ["CASCADE_IF_ELSE20"],
          "base_default_next" : null,
          "next_tables" : {
            "CASCADE_IF_ELSE20" : null
          },
          "default_entry" : {
            "action_id" : 6,
            "action_const" : true,
            "action_data" : [],
            "action_entry_const" : true
          }
        },
        {
          "name" : "tbl_CASCADE_IF_ELSE23",
          "id" : 9,
          "source_info" : {
            "filename" : "/home/p4/multiqueueing_afdx_roundRobin/CASCADE_IF_ELSE.p4",
            "line" : 23,
            "column" : 16,
            "source_fragment" : "usage.read(meta.curr_usage, (bit<32>)(3 + 8*hdr.afdx.dstVL))"
          },
          "key" : [],
          "match_type" : "exact",
          "type" : "simple",
          "max_size" : 1024,
          "with_counters" : false,
          "support_timeout" : false,
          "direct_meters" : null,
          "action_ids" : [15],
          "actions" : ["CASCADE_IF_ELSE23_0"],
          "base_default_next" : "node_17",
          "next_tables" : {
            "CASCADE_IF_ELSE23_0" : "node_17"
          },
          "default_entry" : {
            "action_id" : 15,
            "action_const" : true,
            "action_data" : [],
            "action_entry_const" : true
          }
        },
        {
          "name" : "tbl_CASCADE_IF_ELSE23_0",
          "id" : 10,
          "source_info" : {
            "filename" : "/home/p4/multiqueueing_afdx_roundRobin/CASCADE_IF_ELSE.p4",
            "line" : 23,
            "column" : 118,
            "source_fragment" : "usage.write((bit<32>)(3 + 8*hdr.afdx.dstVL), meta.curr_usage+1); standard_metadata.priority ="
          },
          "key" : [],
          "match_type" : "exact",
          "type" : "simple",
          "max_size" : 1024,
          "with_counters" : false,
          "support_timeout" : false,
          "direct_meters" : null,
          "action_ids" : [7],
          "actions" : ["CASCADE_IF_ELSE23"],
          "base_default_next" : null,
          "next_tables" : {
            "CASCADE_IF_ELSE23" : null
          },
          "default_entry" : {
            "action_id" : 7,
            "action_const" : true,
            "action_data" : [],
            "action_entry_const" : true
          }
        },
        {
          "name" : "tbl_CASCADE_IF_ELSE26",
          "id" : 11,
          "source_info" : {
            "filename" : "/home/p4/multiqueueing_afdx_roundRobin/CASCADE_IF_ELSE.p4",
            "line" : 26,
            "column" : 20,
            "source_fragment" : "usage.read(meta.curr_usage, (bit<32>)(2 + 8*hdr.afdx.dstVL))"
          },
          "key" : [],
          "match_type" : "exact",
          "type" : "simple",
          "max_size" : 1024,
          "with_counters" : false,
          "support_timeout" : false,
          "direct_meters" : null,
          "action_ids" : [14],
          "actions" : ["CASCADE_IF_ELSE26_0"],
          "base_default_next" : "node_20",
          "next_tables" : {
            "CASCADE_IF_ELSE26_0" : "node_20"
          },
          "default_entry" : {
            "action_id" : 14,
            "action_const" : true,
            "action_data" : [],
            "action_entry_const" : true
          }
        },
        {
          "name" : "tbl_CASCADE_IF_ELSE26_0",
          "id" : 12,
          "source_info" : {
            "filename" : "/home/p4/multiqueueing_afdx_roundRobin/CASCADE_IF_ELSE.p4",
            "line" : 26,
            "column" : 122,
            "source_fragment" : "usage.write((bit<32>)(2 + 8*hdr.afdx.dstVL), meta.curr_usage+1); standard_metadata.priority ="
          },
          "key" : [],
          "match_type" : "exact",
          "type" : "simple",
          "max_size" : 1024,
          "with_counters" : false,
          "support_timeout" : false,
          "direct_meters" : null,
          "action_ids" : [8],
          "actions" : ["CASCADE_IF_ELSE26"],
          "base_default_next" : null,
          "next_tables" : {
            "CASCADE_IF_ELSE26" : null
          },
          "default_entry" : {
            "action_id" : 8,
            "action_const" : true,
            "action_data" : [],
            "action_entry_const" : true
          }
        },
        {
          "name" : "tbl_CASCADE_IF_ELSE29",
          "id" : 13,
          "source_info" : {
            "filename" : "/home/p4/multiqueueing_afdx_roundRobin/CASCADE_IF_ELSE.p4",
            "line" : 29,
            "column" : 24,
            "source_fragment" : "usage.read(meta.curr_usage, (bit<32>)(1 + 8*hdr.afdx.dstVL))"
          },
          "key" : [],
          "match_type" : "exact",
          "type" : "simple",
          "max_size" : 1024,
          "with_counters" : false,
          "support_timeout" : false,
          "direct_meters" : null,
          "action_ids" : [13],
          "actions" : ["CASCADE_IF_ELSE29_0"],
          "base_default_next" : "node_23",
          "next_tables" : {
            "CASCADE_IF_ELSE29_0" : "node_23"
          },
          "default_entry" : {
            "action_id" : 13,
            "action_const" : true,
            "action_data" : [],
            "action_entry_const" : true
          }
        },
        {
          "name" : "tbl_CASCADE_IF_ELSE29_0",
          "id" : 14,
          "source_info" : {
            "filename" : "/home/p4/multiqueueing_afdx_roundRobin/CASCADE_IF_ELSE.p4",
            "line" : 29,
            "column" : 126,
            "source_fragment" : "usage.write((bit<32>)(1 + 8*hdr.afdx.dstVL), meta.curr_usage+1); standard_metadata.priority ="
          },
          "key" : [],
          "match_type" : "exact",
          "type" : "simple",
          "max_size" : 1024,
          "with_counters" : false,
          "support_timeout" : false,
          "direct_meters" : null,
          "action_ids" : [9],
          "actions" : ["CASCADE_IF_ELSE29"],
          "base_default_next" : null,
          "next_tables" : {
            "CASCADE_IF_ELSE29" : null
          },
          "default_entry" : {
            "action_id" : 9,
            "action_const" : true,
            "action_data" : [],
            "action_entry_const" : true
          }
        },
        {
          "name" : "tbl_CASCADE_IF_ELSE32",
          "id" : 15,
          "source_info" : {
            "filename" : "/home/p4/multiqueueing_afdx_roundRobin/CASCADE_IF_ELSE.p4",
            "line" : 32,
            "column" : 28,
            "source_fragment" : "usage.read(meta.curr_usage, (bit<32>)(0 + 8*hdr.afdx.dstVL))"
          },
          "key" : [],
          "match_type" : "exact",
          "type" : "simple",
          "max_size" : 1024,
          "with_counters" : false,
          "support_timeout" : false,
          "direct_meters" : null,
          "action_ids" : [12],
          "actions" : ["CASCADE_IF_ELSE32_0"],
          "base_default_next" : "node_26",
          "next_tables" : {
            "CASCADE_IF_ELSE32_0" : "node_26"
          },
          "default_entry" : {
            "action_id" : 12,
            "action_const" : true,
            "action_data" : [],
            "action_entry_const" : true
          }
        },
        {
          "name" : "tbl_CASCADE_IF_ELSE32_0",
          "id" : 16,
          "source_info" : {
            "filename" : "/home/p4/multiqueueing_afdx_roundRobin/CASCADE_IF_ELSE.p4",
            "line" : 32,
            "column" : 130,
            "source_fragment" : "usage.write((bit<32>)(0 + 8*hdr.afdx.dstVL), meta.curr_usage+1); standard_metadata.priority ="
          },
          "key" : [],
          "match_type" : "exact",
          "type" : "simple",
          "max_size" : 1024,
          "with_counters" : false,
          "support_timeout" : false,
          "direct_meters" : null,
          "action_ids" : [10],
          "actions" : ["CASCADE_IF_ELSE32"],
          "base_default_next" : null,
          "next_tables" : {
            "CASCADE_IF_ELSE32" : null
          },
          "default_entry" : {
            "action_id" : 10,
            "action_const" : true,
            "action_data" : [],
            "action_entry_const" : true
          }
        },
        {
          "name" : "tbl_CASCADE_IF_ELSE33",
          "id" : 17,
          "source_info" : {
            "filename" : "/home/p4/multiqueueing_afdx_roundRobin/CASCADE_IF_ELSE.p4",
            "line" : 33,
            "column" : 32,
            "source_fragment" : "usage.write((bit<32>)(0 + 8*hdr.afdx.dstVL), meta.curr_usage+1); standard_metadata.priority ="
          },
          "key" : [],
          "match_type" : "exact",
          "type" : "simple",
          "max_size" : 1024,
          "with_counters" : false,
          "support_timeout" : false,
          "direct_meters" : null,
          "action_ids" : [11],
          "actions" : ["CASCADE_IF_ELSE33"],
          "base_default_next" : null,
          "next_tables" : {
            "CASCADE_IF_ELSE33" : null
          },
          "default_entry" : {
            "action_id" : 11,
            "action_const" : true,
            "action_data" : [],
            "action_entry_const" : true
          }
        },
        {
          "name" : "tbl_afdx_sp_rr107",
          "id" : 18,
          "source_info" : {
            "filename" : "/home/p4/multiqueueing_afdx_roundRobin/afdx_sp_rr.p4",
            "line" : 107,
            "column" : 13,
            "source_fragment" : "mark_to_drop(standard_metadata)"
          },
          "key" : [],
          "match_type" : "exact",
          "type" : "simple",
          "max_size" : 1024,
          "with_counters" : false,
          "support_timeout" : false,
          "direct_meters" : null,
          "action_ids" : [20],
          "actions" : ["afdx_sp_rr107"],
          "base_default_next" : null,
          "next_tables" : {
            "afdx_sp_rr107" : null
          },
          "default_entry" : {
            "action_id" : 20,
            "action_const" : true,
            "action_data" : [],
            "action_entry_const" : true
          }
        }
      ],
      "action_profiles" : [],
      "conditionals" : [
        {
          "name" : "node_2",
          "id" : 0,
          "source_info" : {
            "filename" : "/home/p4/multiqueueing_afdx_roundRobin/afdx_sp_rr.p4",
            "line" : 84,
            "column" : 13,
            "source_fragment" : "(hdr.afdx.dstConst == DST_CONST) && (hdr.afdx.srcMac_cst == SRC_CONST)"
          },
          "expression" : {
            "type" : "expression",
            "value" : {
              "op" : "and",
              "left" : {
                "type" : "expression",
                "value" : {
                  "op" : "==",
                  "left" : {
                    "type" : "field",
                    "value" : ["afdx", "dstConst"]
                  },
                  "right" : {
                    "type" : "hexstr",
                    "value" : "0x03000000"
                  }
                }
              },
              "right" : {
                "type" : "expression",
                "value" : {
                  "op" : "==",
                  "left" : {
                    "type" : "field",
                    "value" : ["afdx", "srcMac_cst"]
                  },
                  "right" : {
                    "type" : "hexstr",
                    "value" : "0x020000"
                  }
                }
              }
            }
          },
          "true_next" : "MyIngress.afdx_table",
          "false_next" : "tbl_afdx_sp_rr107"
        },
        {
          "name" : "node_5",
          "id" : 1,
          "source_info" : {
            "filename" : "/home/p4/multiqueueing_afdx_roundRobin/CASCADE_IF_ELSE.p4",
            "line" : 11,
            "column" : 66,
            "source_fragment" : "meta.curr_usage < meta.vl_weight"
          },
          "expression" : {
            "type" : "expression",
            "value" : {
              "op" : "<",
              "left" : {
                "type" : "field",
                "value" : ["scalars", "userMetadata.curr_usage"]
              },
              "right" : {
                "type" : "field",
                "value" : ["scalars", "userMetadata.vl_weight"]
              }
            }
          },
          "true_next" : "tbl_CASCADE_IF_ELSE11_0",
          "false_next" : "tbl_CASCADE_IF_ELSE14"
        },
        {
          "name" : "node_8",
          "id" : 2,
          "source_info" : {
            "filename" : "/home/p4/multiqueueing_afdx_roundRobin/CASCADE_IF_ELSE.p4",
            "line" : 14,
            "column" : 70,
            "source_fragment" : "meta.curr_usage < meta.vl_weight"
          },
          "expression" : {
            "type" : "expression",
            "value" : {
              "op" : "<",
              "left" : {
                "type" : "field",
                "value" : ["scalars", "userMetadata.curr_usage"]
              },
              "right" : {
                "type" : "field",
                "value" : ["scalars", "userMetadata.vl_weight"]
              }
            }
          },
          "true_next" : "tbl_CASCADE_IF_ELSE14_0",
          "false_next" : "tbl_CASCADE_IF_ELSE17"
        },
        {
          "name" : "node_11",
          "id" : 3,
          "source_info" : {
            "filename" : "/home/p4/multiqueueing_afdx_roundRobin/CASCADE_IF_ELSE.p4",
            "line" : 17,
            "column" : 74,
            "source_fragment" : "meta.curr_usage < meta.vl_weight"
          },
          "expression" : {
            "type" : "expression",
            "value" : {
              "op" : "<",
              "left" : {
                "type" : "field",
                "value" : ["scalars", "userMetadata.curr_usage"]
              },
              "right" : {
                "type" : "field",
                "value" : ["scalars", "userMetadata.vl_weight"]
              }
            }
          },
          "true_next" : "tbl_CASCADE_IF_ELSE17_0",
          "false_next" : "tbl_CASCADE_IF_ELSE20"
        },
        {
          "name" : "node_14",
          "id" : 4,
          "source_info" : {
            "filename" : "/home/p4/multiqueueing_afdx_roundRobin/CASCADE_IF_ELSE.p4",
            "line" : 20,
            "column" : 78,
            "source_fragment" : "meta.curr_usage < meta.vl_weight"
          },
          "expression" : {
            "type" : "expression",
            "value" : {
              "op" : "<",
              "left" : {
                "type" : "field",
                "value" : ["scalars", "userMetadata.curr_usage"]
              },
              "right" : {
                "type" : "field",
                "value" : ["scalars", "userMetadata.vl_weight"]
              }
            }
          },
          "true_next" : "tbl_CASCADE_IF_ELSE20_0",
          "false_next" : "tbl_CASCADE_IF_ELSE23"
        },
        {
          "name" : "node_17",
          "id" : 5,
          "source_info" : {
            "filename" : "/home/p4/multiqueueing_afdx_roundRobin/CASCADE_IF_ELSE.p4",
            "line" : 23,
            "column" : 82,
            "source_fragment" : "meta.curr_usage < meta.vl_weight"
          },
          "expression" : {
            "type" : "expression",
            "value" : {
              "op" : "<",
              "left" : {
                "type" : "field",
                "value" : ["scalars", "userMetadata.curr_usage"]
              },
              "right" : {
                "type" : "field",
                "value" : ["scalars", "userMetadata.vl_weight"]
              }
            }
          },
          "true_next" : "tbl_CASCADE_IF_ELSE23_0",
          "false_next" : "tbl_CASCADE_IF_ELSE26"
        },
        {
          "name" : "node_20",
          "id" : 6,
          "source_info" : {
            "filename" : "/home/p4/multiqueueing_afdx_roundRobin/CASCADE_IF_ELSE.p4",
            "line" : 26,
            "column" : 86,
            "source_fragment" : "meta.curr_usage < meta.vl_weight"
          },
          "expression" : {
            "type" : "expression",
            "value" : {
              "op" : "<",
              "left" : {
                "type" : "field",
                "value" : ["scalars", "userMetadata.curr_usage"]
              },
              "right" : {
                "type" : "field",
                "value" : ["scalars", "userMetadata.vl_weight"]
              }
            }
          },
          "true_next" : "tbl_CASCADE_IF_ELSE26_0",
          "false_next" : "tbl_CASCADE_IF_ELSE29"
        },
        {
          "name" : "node_23",
          "id" : 7,
          "source_info" : {
            "filename" : "/home/p4/multiqueueing_afdx_roundRobin/CASCADE_IF_ELSE.p4",
            "line" : 29,
            "column" : 90,
            "source_fragment" : "meta.curr_usage < meta.vl_weight"
          },
          "expression" : {
            "type" : "expression",
            "value" : {
              "op" : "<",
              "left" : {
                "type" : "field",
                "value" : ["scalars", "userMetadata.curr_usage"]
              },
              "right" : {
                "type" : "field",
                "value" : ["scalars", "userMetadata.vl_weight"]
              }
            }
          },
          "true_next" : "tbl_CASCADE_IF_ELSE29_0",
          "false_next" : "tbl_CASCADE_IF_ELSE32"
        },
        {
          "name" : "node_26",
          "id" : 8,
          "source_info" : {
            "filename" : "/home/p4/multiqueueing_afdx_roundRobin/CASCADE_IF_ELSE.p4",
            "line" : 32,
            "column" : 94,
            "source_fragment" : "meta.curr_usage < meta.vl_weight"
          },
          "expression" : {
            "type" : "expression",
            "value" : {
              "op" : "<",
              "left" : {
                "type" : "field",
                "value" : ["scalars", "userMetadata.curr_usage"]
              },
              "right" : {
                "type" : "field",
                "value" : ["scalars", "userMetadata.vl_weight"]
              }
            }
          },
          "true_next" : "tbl_CASCADE_IF_ELSE32_0",
          "false_next" : "tbl_CASCADE_IF_ELSE33"
        }
      ]
    },
    {
      "name" : "egress",
      "id" : 1,
      "source_info" : {
        "filename" : "/home/p4/multiqueueing_afdx_roundRobin/afdx_sp_rr.p4",
        "line" : 117,
        "column" : 8,
        "source_fragment" : "MyEgress"
      },
      "init_table" : "tbl_afdx_sp_rr119",
      "tables" : [
        {
          "name" : "tbl_afdx_sp_rr119",
          "id" : 19,
          "source_info" : {
            "filename" : "/home/p4/multiqueueing_afdx_roundRobin/afdx_sp_rr.p4",
            "line" : 119,
            "column" : 23,
            "source_fragment" : "="
          },
          "key" : [],
          "match_type" : "exact",
          "type" : "simple",
          "max_size" : 1024,
          "with_counters" : false,
          "support_timeout" : false,
          "direct_meters" : null,
          "action_ids" : [27],
          "actions" : ["afdx_sp_rr119"],
          "base_default_next" : "node_33",
          "next_tables" : {
            "afdx_sp_rr119" : "node_33"
          },
          "default_entry" : {
            "action_id" : 27,
            "action_const" : true,
            "action_data" : [],
            "action_entry_const" : true
          }
        },
        {
          "name" : "tbl_afdx_sp_rr132",
          "id" : 20,
          "source_info" : {
            "filename" : "/home/p4/multiqueueing_afdx_roundRobin/afdx_sp_rr.p4",
            "line" : 132,
            "column" : 12,
            "source_fragment" : "usage.read(meta.curr_usage, (bit<32>)(standard_metadata.priority) + (bit<32>)(8*hdr.afdx.dstVL))"
          },
          "key" : [],
          "match_type" : "exact",
          "type" : "simple",
          "max_size" : 1024,
          "with_counters" : false,
          "support_timeout" : false,
          "direct_meters" : null,
          "action_ids" : [23],
          "actions" : ["afdx_sp_rr132"],
          "base_default_next" : "node_35",
          "next_tables" : {
            "afdx_sp_rr132" : "node_35"
          },
          "default_entry" : {
            "action_id" : 23,
            "action_const" : true,
            "action_data" : [],
            "action_entry_const" : true
          }
        },
        {
          "name" : "tbl_afdx_sp_rr138",
          "id" : 21,
          "source_info" : {
            "filename" : "/home/p4/multiqueueing_afdx_roundRobin/afdx_sp_rr.p4",
            "line" : 138,
            "column" : 33,
            "source_fragment" : "="
          },
          "key" : [],
          "match_type" : "exact",
          "type" : "simple",
          "max_size" : 1024,
          "with_counters" : false,
          "support_timeout" : false,
          "direct_meters" : null,
          "action_ids" : [21],
          "actions" : ["afdx_sp_rr138"],
          "base_default_next" : "node_38",
          "next_tables" : {
            "afdx_sp_rr138" : "node_38"
          },
          "default_entry" : {
            "action_id" : 21,
            "action_const" : true,
            "action_data" : [],
            "action_entry_const" : true
          }
        },
        {
          "name" : "tbl_afdx_sp_rr143",
          "id" : 22,
          "source_info" : {
            "filename" : "/home/p4/multiqueueing_afdx_roundRobin/afdx_sp_rr.p4",
            "line" : 143,
            "column" : 16,
            "source_fragment" : "usage.read(meta.below_usage, (bit<32>)(standard_metadata.priority)-1 + (bit<32>)(8*hdr.afdx.dstVL))"
          },
          "key" : [],
          "match_type" : "exact",
          "type" : "simple",
          "max_size" : 1024,
          "with_counters" : false,
          "support_timeout" : false,
          "direct_meters" : null,
          "action_ids" : [22],
          "actions" : ["afdx_sp_rr143"],
          "base_default_next" : "node_38",
          "next_tables" : {
            "afdx_sp_rr143" : "node_38"
          },
          "default_entry" : {
            "action_id" : 22,
            "action_const" : true,
            "action_data" : [],
            "action_entry_const" : true
          }
        },
        {
          "name" : "tbl_afdx_sp_rr153",
          "id" : 23,
          "source_info" : {
            "filename" : "/home/p4/multiqueueing_afdx_roundRobin/afdx_sp_rr.p4",
            "line" : 153,
            "column" : 20,
            "source_fragment" : "usage.write((bit<32>)(0 + 8*hdr.afdx.dstVL), 0); ..."
          },
          "key" : [],
          "match_type" : "exact",
          "type" : "simple",
          "max_size" : 1024,
          "with_counters" : false,
          "support_timeout" : false,
          "direct_meters" : null,
          "action_ids" : [24],
          "actions" : ["afdx_sp_rr153"],
          "base_default_next" : null,
          "next_tables" : {
            "afdx_sp_rr153" : null
          },
          "default_entry" : {
            "action_id" : 24,
            "action_const" : true,
            "action_data" : [],
            "action_entry_const" : true
          }
        },
        {
          "name" : "tbl_afdx_sp_rr164",
          "id" : 24,
          "source_info" : {
            "filename" : "/home/p4/multiqueueing_afdx_roundRobin/afdx_sp_rr.p4",
            "line" : 164,
            "column" : 20,
            "source_fragment" : "usage.write((bit<32>)(standard_metadata.priority) + (bit<32>)(8*hdr.afdx.dstVL), meta.curr_usage-1)"
          },
          "key" : [],
          "match_type" : "exact",
          "type" : "simple",
          "max_size" : 1024,
          "with_counters" : false,
          "support_timeout" : false,
          "direct_meters" : null,
          "action_ids" : [25],
          "actions" : ["afdx_sp_rr164"],
          "base_default_next" : null,
          "next_tables" : {
            "afdx_sp_rr164" : null
          },
          "default_entry" : {
            "action_id" : 25,
            "action_const" : true,
            "action_data" : [],
            "action_entry_const" : true
          }
        },
        {
          "name" : "tbl_afdx_sp_rr168",
          "id" : 25,
          "source_info" : {
            "filename" : "/home/p4/multiqueueing_afdx_roundRobin/afdx_sp_rr.p4",
            "line" : 168,
            "column" : 13,
            "source_fragment" : "mark_to_drop(standard_metadata)"
          },
          "key" : [],
          "match_type" : "exact",
          "type" : "simple",
          "max_size" : 1024,
          "with_counters" : false,
          "support_timeout" : false,
          "direct_meters" : null,
          "action_ids" : [26],
          "actions" : ["afdx_sp_rr168"],
          "base_default_next" : null,
          "next_tables" : {
            "afdx_sp_rr168" : null
          },
          "default_entry" : {
            "action_id" : 26,
            "action_const" : true,
            "action_data" : [],
            "action_entry_const" : true
          }
        }
      ],
      "action_profiles" : [],
      "conditionals" : [
        {
          "name" : "node_33",
          "id" : 9,
          "source_info" : {
            "filename" : "/home/p4/multiqueueing_afdx_roundRobin/afdx_sp_rr.p4",
            "line" : 121,
            "column" : 12,
            "source_fragment" : "standard_metadata.packet_length <= meta.maxi_length"
          },
          "expression" : {
            "type" : "expression",
            "value" : {
              "op" : "<=",
              "left" : {
                "type" : "field",
                "value" : ["standard_metadata", "packet_length"]
              },
              "right" : {
                "type" : "field",
                "value" : ["scalars", "userMetadata.maxi_length"]
              }
            }
          },
          "true_next" : "tbl_afdx_sp_rr132",
          "false_next" : "tbl_afdx_sp_rr168"
        },
        {
          "name" : "node_35",
          "id" : 10,
          "source_info" : {
            "filename" : "/home/p4/multiqueueing_afdx_roundRobin/afdx_sp_rr.p4",
            "line" : 135,
            "column" : 16,
            "source_fragment" : "0 == standard_metadata.priority"
          },
          "expression" : {
            "type" : "expression",
            "value" : {
              "op" : "==",
              "left" : {
                "type" : "hexstr",
                "value" : "0x00"
              },
              "right" : {
                "type" : "field",
                "value" : ["standard_metadata", "priority"]
              }
            }
          },
          "true_next" : "tbl_afdx_sp_rr138",
          "false_next" : "tbl_afdx_sp_rr143"
        },
        {
          "name" : "node_38",
          "id" : 11,
          "source_info" : {
            "filename" : "/home/p4/multiqueueing_afdx_roundRobin/afdx_sp_rr.p4",
            "line" : 147,
            "column" : 16,
            "source_fragment" : "0 == meta.below_usage"
          },
          "expression" : {
            "type" : "expression",
            "value" : {
              "op" : "==",
              "left" : {
                "type" : "hexstr",
                "value" : "0x0000"
              },
              "right" : {
                "type" : "field",
                "value" : ["scalars", "userMetadata.below_usage"]
              }
            }
          },
          "false_next" : null,
          "true_next" : "node_39"
        },
        {
          "name" : "node_39",
          "id" : 12,
          "source_info" : {
            "filename" : "/home/p4/multiqueueing_afdx_roundRobin/afdx_sp_rr.p4",
            "line" : 150,
            "column" : 20,
            "source_fragment" : "0 == meta.curr_usage-1"
          },
          "expression" : {
            "type" : "expression",
            "value" : {
              "op" : "==",
              "left" : {
                "type" : "hexstr",
                "value" : "0x0000"
              },
              "right" : {
                "type" : "expression",
                "value" : {
                  "op" : "&",
                  "left" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "+",
                      "left" : {
                        "type" : "field",
                        "value" : ["scalars", "userMetadata.curr_usage"]
                      },
                      "right" : {
                        "type" : "hexstr",
                        "value" : "0xffff"
                      }
                    }
                  },
                  "right" : {
                    "type" : "hexstr",
                    "value" : "0xffff"
                  }
                }
              }
            }
          },
          "true_next" : "tbl_afdx_sp_rr153",
          "false_next" : "tbl_afdx_sp_rr164"
        }
      ]
    }
  ],
  "checksums" : [],
  "force_arith" : [],
  "extern_instances" : [],
  "field_aliases" : [
    [
      "queueing_metadata.enq_timestamp",
      ["standard_metadata", "enq_timestamp"]
    ],
    [
      "queueing_metadata.enq_qdepth",
      ["standard_metadata", "enq_qdepth"]
    ],
    [
      "queueing_metadata.deq_timedelta",
      ["standard_metadata", "deq_timedelta"]
    ],
    [
      "queueing_metadata.deq_qdepth",
      ["standard_metadata", "deq_qdepth"]
    ],
    [
      "queueing_metadata.qid",
      ["standard_metadata", "qid"]
    ],
    [
      "intrinsic_metadata.ingress_global_timestamp",
      ["standard_metadata", "ingress_global_timestamp"]
    ],
    [
      "intrinsic_metadata.egress_global_timestamp",
      ["standard_metadata", "egress_global_timestamp"]
    ],
    [
      "intrinsic_metadata.mcast_grp",
      ["standard_metadata", "mcast_grp"]
    ],
    [
      "intrinsic_metadata.egress_rid",
      ["standard_metadata", "egress_rid"]
    ],
    [
      "intrinsic_metadata.priority",
      ["standard_metadata", "priority"]
    ]
  ],
  "program" : "/home/p4/multiqueueing_afdx_roundRobin/afdx_sp_rr.p4i",
  "__meta__" : {
    "version" : [2, 23],
    "compiler" : "https://github.com/p4lang/p4c"
  }
}