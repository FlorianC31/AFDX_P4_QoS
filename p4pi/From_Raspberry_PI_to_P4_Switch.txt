/!\ The following has been tested with a Raspberry PI 4 4Gb RAM model /!\
/!\ The following has been tested on P4PI version p4pi-image-2021-08-23-00b0e048-lite /!\

All following info is compiled from these links : 
	https://github.com/p4lang/p4pi/wiki


How to transform yourRaspberry Pi in to a P4 programmable Switch:

I/ Get a Raspberry Pi model 4 with at least 4Gb of RAM and 16Gb of SD Memory
	/!\ Get a Fan and a Heatsink /!\

II/ Download the latest version of P4PI at this link : https://github.com/p4lang/p4pi/releases
P4PI is a modified raspbian lite image with all the needed p4 dependencies and programs.

III/ Install P4PI on the SD card.

IV/ Plug and start the Raspberry Pi

V/ Login to the Raspberry Pi:
	a) If you have a Keyboard + Screen connected to the R.Pi, you can login using 
	the default username + password (pi, raspberry)
	/!\ think about changing the password /!\
	
	b) A keyboard + scren is not needed, you can SSH to the Raspberry Pi (it's enable by default):
		-Connect to the P4Pi WiFi Access Point (enabled by default), password : raspberry
		/!\ think about changing the password /!\
		
		-SSH to the raspberry (standard SSH with access to everything)	
		
		- Or you can use the P4PI web interface, but it's limited to running p4 examples and
		uploading p4 test code only.

VI/ Run an example : Simplest example to run L2Switch.
	a) If connected through the web interface:
		1- Choose the L2Switch example
		2- Click run
		3- test it with ping : ping 192.168.4.150 (the default IP address)
		=> ping should be successful
	
	b) If connected through the SSH or directly on the Pi:
		1- sudo su
		2- echo l2switch > /root/t4p4s-switch
		3- systemctl restart t4p4s.service
			OR
		3- systemctl stop t4p4s.service
		   systemctl start t4p4s.service
		
		4- on the laptop, test it with ping : ping 192.168.4.150 (the default IP address)
		=> ping should be successful

VII/ Add and run new P4 program on P4PI:
	1) Copy or create P4 program in /root/t4p4s/examples folder (default location)
	2) add configuration options for your program in file /root/t4p4s/examples.cfg:
		the simplest is to copy another configuration line from another example.
	3) Run the program:
		a) sudo su
		b) echo programname > /root/t4p4s-switch
		c) systemctl restart t4p4s.service
			OR
		c) run in debug mode:
			systemctl stop t4p4s.service
			cd /root/t4p4s
			./t4p4s.sh :programname p4rt verbose dbg
		d) if you need to modify/upload routing tables and explore other runtime capabilites use
		the P4Runtime Shell:
			sudo t4p4s-p4rtshell programname
